{"version":3,"sources":["webpack://Terminal/webpack/universalModuleDefinition","webpack://Terminal/webpack/bootstrap","webpack://Terminal/./src/common/Lifecycle.ts","webpack://Terminal/./src/common/EventEmitter.ts","webpack://Terminal/./src/common/buffer/Constants.ts","webpack://Terminal/./src/common/buffer/CellData.ts","webpack://Terminal/./src/common/buffer/AttributeData.ts","webpack://Terminal/./src/browser/Lifecycle.ts","webpack://Terminal/./src/browser/renderer/atlas/Constants.ts","webpack://Terminal/./src/common/Platform.ts","webpack://Terminal/./src/common/data/EscapeSequences.ts","webpack://Terminal/./src/common/input/TextDecoder.ts","webpack://Terminal/./src/renderer/BaseRenderLayer.ts","webpack://Terminal/./src/common/TypedArrayUtils.ts","webpack://Terminal/./src/common/buffer/BufferLine.ts","webpack://Terminal/./src/browser/LocalizableStrings.ts","webpack://Terminal/./src/common/CharWidth.ts","webpack://Terminal/./src/renderer/atlas/CharAtlasCache.ts","webpack://Terminal/./src/renderer/atlas/CharAtlasUtils.ts","webpack://Terminal/./src/browser/ColorManager.ts","webpack://Terminal/./src/browser/renderer/CharacterJoinerRegistry.ts","webpack://Terminal/./src/MouseZoneManager.ts","webpack://Terminal/./src/browser/input/Mouse.ts","webpack://Terminal/./src/browser/RenderDebouncer.ts","webpack://Terminal/./src/browser/ScreenDprMonitor.ts","webpack://Terminal/./src/common/Clone.ts","webpack://Terminal/./src/public/Terminal.ts","webpack://Terminal/./src/Terminal.ts","webpack://Terminal/./src/CompositionHelper.ts","webpack://Terminal/./src/Viewport.ts","webpack://Terminal/./src/Clipboard.ts","webpack://Terminal/./src/InputHandler.ts","webpack://Terminal/./src/common/data/Charsets.ts","webpack://Terminal/./src/common/parser/EscapeSequenceParser.ts","webpack://Terminal/./src/common/parser/Params.ts","webpack://Terminal/./src/renderer/Renderer.ts","webpack://Terminal/./src/renderer/TextRenderLayer.ts","webpack://Terminal/./src/browser/renderer/GridCache.ts","webpack://Terminal/./src/renderer/atlas/DynamicCharAtlas.ts","webpack://Terminal/./src/renderer/atlas/BaseCharAtlas.ts","webpack://Terminal/./src/browser/renderer/atlas/LRUMap.ts","webpack://Terminal/./src/renderer/SelectionRenderLayer.ts","webpack://Terminal/./src/renderer/CursorRenderLayer.ts","webpack://Terminal/./src/renderer/LinkRenderLayer.ts","webpack://Terminal/./src/Linkifier.ts","webpack://Terminal/./src/browser/services/SelectionService.ts","webpack://Terminal/./src/browser/selection/SelectionModel.ts","webpack://Terminal/./src/browser/input/MoveToCell.ts","webpack://Terminal/./src/browser/services/SoundService.ts","webpack://Terminal/./src/AccessibilityManager.ts","webpack://Terminal/./src/renderer/dom/DomRenderer.ts","webpack://Terminal/./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://Terminal/./src/common/input/Keyboard.ts","webpack://Terminal/./src/WindowsMode.ts","webpack://Terminal/./src/browser/services/RenderService.ts","webpack://Terminal/./src/common/services/OptionsService.ts","webpack://Terminal/./src/browser/services/CharSizeService.ts","webpack://Terminal/./src/common/services/BufferService.ts","webpack://Terminal/./src/common/buffer/BufferSet.ts","webpack://Terminal/./src/common/buffer/Buffer.ts","webpack://Terminal/./src/common/CircularList.ts","webpack://Terminal/./src/common/buffer/BufferReflow.ts","webpack://Terminal/./src/common/buffer/Marker.ts","webpack://Terminal/./src/browser/services/MouseService.ts","webpack://Terminal/./src/common/services/CoreService.ts","webpack://Terminal/./src/public/AddonManager.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Disposable","this","_disposables","_isDisposed","dispose","forEach","length","register","push","unregister","index","indexOf","splice","EventEmitter","_listeners","_this","_event","listener","fire","data","queue","undefined","DEFAULT_COLOR","DEFAULT_ATTR","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CODE_INDEX","NULL_CELL_CHAR","NULL_CELL_WIDTH","NULL_CELL_CODE","WHITESPACE_CELL_CHAR","WHITESPACE_CELL_WIDTH","WHITESPACE_CELL_CODE","TextDecoder_1","Constants_1","CellData","_super","apply","arguments","content","fg","bg","combinedData","__extends","fromCharData","obj","setFromCharData","isCombined","getWidth","getChars","stringFromCodePoint","getCode","charCodeAt","combined","code","second","getAsCharData","AttributeData","toColorRGB","fromColorRGB","clone","newObj","isInverse","isBold","isUnderline","isBlink","isInvisible","isItalic","isDim","getFgColorMode","getBgColorMode","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","getFgColor","getBgColor","addDisposableDomListener","node","type","handler","useCapture","addEventListener","removeEventListener","INVERTED_DEFAULT_COLOR","DIM_OPACITY","CHAR_ATLAS_CELL_SPACING","isNode","navigator","userAgent","platform","contains","arr","el","isFirefox","isSafari","test","isMac","isIpad","isIphone","isWindows","isLinux","C0","NUL","SOH","STX","ETX","EOT","ENQ","ACK","BEL","BS","HT","LF","VT","FF","CR","SO","SI","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","ESC","FS","GS","RS","US","SP","DEL","C1","PAD","HOP","BPH","NBH","IND","NEL","SSA","ESA","HTS","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","ST","OSC","PM","APC","codePoint","String","fromCharCode","utf32ToString","start","end","result","codepoint","StringToUtf32","_interim","clear","decode","input","target","size","startPos","Utf8ToUtf32","interim","Uint8Array","fill","byte1","byte2","byte3","byte4","discardInterim","cp","pos","tmp","missing","fourStop","Constants_2","CharAtlasCache_1","AttributeData_1","BaseRenderLayer","_container","id","zIndex","_alpha","_colors","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","chars","bold","dim","italic","_canvas","document","createElement","classList","add","style","toString","_initCanvas","appendChild","removeChild","_charAtlas","_ctx","getContext","alpha","_clearAll","onOptionsChanged","terminal","onBlur","onFocus","onCursorMove","onGridChanged","startRow","endRow","onSelectionChanged","columnSelectMode","setColors","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","rows","acquireCharAtlas","warmUp","resize","scaledCellWidth","scaledCellHeight","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","width","scaledCanvasWidth","height","scaledCanvasHeight","canvasWidth","canvasHeight","_fillCells","x","y","fillRect","_fillBottomLineAtCells","devicePixelRatio","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","fillStyle","background","css","_clearCells","_fillCharTrueColor","cell","font","_getFont","textBaseline","_clipRow","fillText","_drawChars","_drawUncachedChars","options","drawBoldTextInBrightColors","draw","save","join","ansi","foreground","globalAlpha","restore","beginPath","rect","cols","clip","fontWeight","fontWeightBold","fontSize","fontFamily","fillFallback","array","concat","a","b","constructor","set","CellData_1","CELL_SIZE","DEFAULT_ATTR_DATA","freeze","BufferLine","fillCellData","isWrapped","_combined","_data","Uint32Array","setCell","hasWidth","getFg","getBg","hasContent","getCodePoint","getString","loadCell","startIndex","setCellFromCodePoint","addCodepointToCell","insertCells","deleteCells","replaceCells","subarray","keys","parseInt","copyFrom","line","newLine","getTrimmedLength","copyCellsFrom","src","srcCol","destCol","applyInReverse","srcData","srcCombinedKeys","translateToString","trimRight","startCol","endCol","Math","min","promptLabel","tooMuchOutput","TypedArrayUtils_1","wcwidth","opts","COMBINING_BMP","COMBINING_HIGH","control","table","nul","num","ucs","mid","max","bisearch","wcwidthHigh","getStringCellWidth","CharAtlasUtils_1","DynamicCharAtlas_1","charAtlasCache","colors","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","atlas","newEntry","DynamicCharAtlas","removeTerminalFromCache","clonedColors","cursor","cursorAccent","selection","slice","allowTransparency","rgba","is256Color","colorCode","DEFAULT_FOREGROUND","fromHex","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","toPaddedHex","DEFAULT_ANSI_COLORS","v","g","ch","ColorManager","canvas","ctx","Error","globalCompositeOperation","_litmusColor","createLinearGradient","setTheme","theme","_parseColor","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","fallback","console","warn","getImageData","JoinedCellData","firstCell","_width","CharacterJoinerRegistry","_bufferService","_characterJoiners","_nextCharacterJoinerId","_workCell","registerCharacterJoiner","joiner","deregisterCharacterJoiner","joinerId","getJoinedCharacters","row","buffer","lines","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","joinedRanges","_getJoinedRanges","endIndex","lineData","text","substring","joinerRanges","j","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","length_1","newRange","inRange","range","Lifecycle_1","Lifecycle_2","MouseZoneManager","_terminal","_mouseService","_zones","_areZonesActive","_tooltipTimeout","_currentZone","_lastHoverCoords","element","e","_onMouseDown","_mouseMoveListener","_onMouseMove","_mouseLeaveListener","_onMouseLeave","_clickListener","_onClick","_deactivate","zone","_activate","clearAll","y1","y2","leaveCallback","pageX","pageY","_onHover","_findZoneEventAt","clearTimeout","hoverCallback","setTimeout","_onTooltip","tooltipCallback","_initialSelectionLength","getSelection","willLinkActivate","preventDefault","stopImmediatePropagation","currentSelectionLength","clickCallback","coords","getCoords","screenElement","x1","x2","MouseZone","getCoordsRelativeToElement","event","getBoundingClientRect","clientX","left","clientY","top","colCount","rowCount","hasValidCharSize","actualCellWidth","actualCellHeight","isSelection","ceil","getRawByteCoords","RenderDebouncer","_renderCallback","_animationFrame","cancelAnimationFrame","refresh","rowStart","rowEnd","_rowCount","_rowStart","_rowEnd","requestAnimationFrame","_innerRefresh","ScreenDprMonitor","_currentDevicePixelRatio","setListener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","val","depth","clonedObject","Array","isArray","Terminal_1","Strings","AddonManager_1","Terminal","_core","_addonManager","AddonManager","onLineFeed","onSelectionChange","onData","onTitleChange","onScroll","onKey","onRender","onResize","textarea","BufferApiView","markers","blur","focus","columns","_verifyIntegers","writeln","open","parent","attachCustomKeyEventHandler","customKeyEventHandler","addCsiHandler","flag","callback","params","collect","toArray","addOscHandler","ident","registerLinkMatcher","regex","deregisterLinkMatcher","matcherId","addMarker","cursorYOffset","hasSelection","select","column","getSelectionPosition","clearSelection","selectAll","selectLines","scrollLines","amount","scrollPages","pageCount","scrollToTop","scrollToBottom","scrollToLine","write","writeUtf8","getOption","optionsService","setOption","reset","applyAddon","addon","loadAddon","values","_i","_buffer","ydisp","ybase","getLine","BufferLineApiView","_line","getCell","BufferCellApiView","startColumn","endColumn","_x","CompositionHelper_1","Viewport_1","Clipboard_1","EscapeSequences_1","InputHandler_1","Renderer_1","Linkifier_1","SelectionService_1","Browser","SoundService_1","MouseZoneManager_1","AccessibilityManager_1","DomRenderer_1","Keyboard_1","EventEmitter_1","BufferLine_1","WindowsMode_1","ColorManager_1","RenderService_1","OptionsService_1","CharSizeService_1","BufferService_1","MouseService_1","CoreService_1","browser","_blankLine","_onCursorMove","_onData","_onKey","_onLineFeed","_onRender","_onResize","_onScroll","_onSelectionChange","_onTitleChange","_onFocus","_onBlur","onA11yCharEmitter","onA11yTabEmitter","OptionsService","BufferService","_coreService","CoreService","_setupOptionsListeners","_setup","_windowsMode","_customKeyEventHandler","parentNode","_parent","body","cursorState","cursorHidden","applicationKeypad","originMode","insertMode","wraparoundMode","bracketedPasteMode","charset","gcharset","glevel","charsets","curAttrData","_eraseAttrData","currentParam","writeBuffer","writeBufferUtf8","_writeInProgress","_xoffSentToCatchUp","_userScrolling","_inputHandler","InputHandler","_selectionService","linkifier","Linkifier","_mouseZoneManager","windowsMode","applyWindowsMode","buffers","active","eraseAttrData","preventScroll","activeElement","hasFocus","onOptionChange","_renderService","_charSizeService","measure","setRenderer","_createRenderer","viewport","syncScrollArea","screenReaderMode","_accessibilityManager","AccessibilityManager","dimensions","setupTabStops","_setTheme","newBufferLength","scrollback","amountToTrim","needsRefresh","trimStart","_onTextAreaFocus","ev","sendFocus","triggerDataEvent","updateCursorStyle","showCursor","_onTextAreaBlur","remove","_initGlobal","_bindKeys","copyHandler","pasteHandlerWrapper","pasteHandler","button","rightClickHandler","rightClickSelectsWord","moveTextAreaUnderMouseCursor","_keyUp","_keyDown","_keyPress","_compositionHelper","compositionstart","compositionupdate","compositionend","updateCompositionElements","_queueLinkification","_context","ownerDocument","defaultView","_document","dir","setAttribute","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","tabIndex","CharSizeService","_compositionView","CompositionHelper","_theme","_colorManager","renderer","RenderService","_soundService","SoundService","MouseService","attachToDom","Viewport","onThemeChange","onDimensionsChange","SelectionService","suppressEvent","onMouseDown","onRedrawRequest","onLinuxMouseSelection","toggle","mouseEvents","disable","enable","setBrowserServices","setDimensions","bindMouse","rendererType","Renderer","DomRenderer","self","pressed","sendButton","shift","meta","ctrl","mod","overrideType","which","detail","deltaY","shiftKey","metaKey","ctrlKey","vt200Mouse","normalMouse","getButton","sendEvent","encode","utfMouse","_vt300Mouse","data_1","_decLocator","page","urxvtMouse","sgrMouse","shouldForceSelection","cancel","moveHandler","sendMove","x10Mouse","hasScrollback","getLinesScrolled","sequence","decPrivateModes","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","linkifyRows","shouldColumnSelect","scroll","eraseAttr","getBlankLine","topRow","scrollTop","bottomRow","scrollBottom","willBufferBeTrimmed","isFull","recycle","scrollRegionHeight","shiftElements","updateRange","disp","suppressScrollEvent","oldYdisp","scrollAmount","useFlowControl","_innerWriteUtf8","bufferOffset","startTime","Date","now","_refreshStart","_refreshEnd","parseUtf8","_innerWrite","parse","normal","setSelection","selectionText","selectionStart","selectionEnd","keydown","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","domEvent","thirdLevelKey","altKey","keyCode","setgLevel","setgCharset","wasModifierKeyOnlyEvent","charCode","bell","_soundBell","playBellSound","_visualBell","_visualBellTimer","log","debug","error","isNaN","MINIMUM_COLS","MINIMUM_ROWS","hasValidSize","maxRange","is","term","termName","handleTitle","title","reverseIndex","inputHandler","writeInProgress","xoffSentToCatchUp","userScrolling","tabSet","tabs","force","cancelEvents","stopPropagation","bellStyle","_textarea","_isComposing","_isSendingComposition","_compositionPosition","textContent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","_clearTextareaPosition","currentCompositionPosition_1","oldValue","diff","replace","dontRecurse","isCursorInViewport","cellHeight","lineHeight","cursorTop","cursorLeft","compositionViewBounds","FALLBACK_SCROLL_BAR_WIDTH","_scrollArea","_dimensions","scrollBarWidth","_currentRowHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","onDimensionsChance","backgroundColor","_refresh","offsetHeight","newBufferHeight","round","newScrollTop","offsetParent","_getPixelsScrolled","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","floor","_lastTouchY","touches","prepareTextForTerminal","bracketTextForPaste","position","selectionService","clipboardData","setData","triggerUserInput","dispatchPaste","getData","shouldSelectWord","isClickInSelection","selectWordAtCursor","Charsets_1","CharWidth_1","EscapeSequenceParser_1","GLEVEL","(",")","*","+","-",".","DECRQSS","hook","put","unhook","pt","block","underline","bar","_parser","EscapeSequenceParser","_parseBuffer","_stringDecoder","_utf8Decoder","setCsiHandlerFallback","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","identifier","setPrintHandler","print","setCsiHandler","insertChars","cursorUp","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributes","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","resetMode","charAttributes","deviceStatus","softReset","setCursorStyle","setScrollRegion","saveCursor","restoreCursor","setExecuteHandler","lineFeed","carriageReturn","backspace","tab","shiftOut","shiftIn","nextLine","setOscHandler","setTitle","setEscHandler","keypadApplicationMode","keypadNumericMode","selectDefaultCharset","this_1","selectCharset","CHARSETS","setErrorHandler","state","setDcsHandler","cursorStartX","cursorStartY","chWidth","curAttr","bufferRow","getNullCell","precedingCodepoint","convertEol","originalX","nextStop","param","col","_eraseInBufferLine","clearWrap","_resetBufferLine","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","prevStop","_setMode","DEFAULT_CHARSET","savedCols","activateAltBuffer","_resetMode","activateNormalBuffer","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","cursorStyle","isBlinking","cursorBlink","savedX","savedY","savedCurAttrData","collectAndFlag","level","`","f","h","k","q","u","w","z","{","|","}","~","#","@","[","\\","]","^","_","Params_1","TransitionTable","setDefault","action","next","addMany","codes","VT500_TRANSITION_TABLE","blueprint","map","unused","PRINTABLES","EXECUTABLES","states","DcsDummy","TRANSITIONS","initialState","currentState","_osc","_params","Params","addParam","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_oscHandlerFb","_dcsHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscHandlers","_dcsHandlers","_activeDcsHandler","_errorHandler","clearPrintHandler","clearExecuteHandler","handlerList","handlerIndex","clearCsiHandler","clearEscHandler","clearOscHandler","clearDcsHandler","setDcsHandlerFallback","clearErrorHandler","transition","osc","dcsHandler","j_1","abort","handlers","isSub","addSubParam","addSubParamDigit","addParamDigit","j_2","j_3","idx","handlers_1","j_4","MAX_SUBPARAMS","maxLength","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","fromArray","newParams","res","getSubParamsAll","TextRenderLayer_1","SelectionRenderLayer_1","CursorRenderLayer_1","LinkRenderLayer_1","CharacterJoinerRegistry_1","_characterJoinerRegistry","_renderLayers","TextRenderLayer","SelectionRenderLayer","LinkRenderLayer","CursorRenderLayer","_devicePixelRatio","_updateDimensions","onDevicePixelRatioChange","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","GridCache_1","BaseRenderLayer_1","container","characterJoinerRegistry","_characterOverlapCache","_state","GridCache","terminalFont","_characterWidth","_characterFont","_forEachCell","firstRow","lastRow","joinerRegistry","isJoined","lastCharX","_isOverlapping","_drawBackground","startX","startY","prevFillStyle","nextFillStyle","_drawForeground","cache","beginFrame","overlaps","measureText","BaseCharAtlas_1","LRUMap_1","Platform_1","TEXTURE_WIDTH","TEXTURE_HEIGHT","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","tmpCanvas","_tmpCtx","_height","capacity","_cacheMap","LRUMap","prealloc","_canCache","glyphKey","cacheValue","_drawFromCache","peek","cacheValue_1","_drawToCache","_toCoordinateX","_toCoordinateY","isEmpty","cacheX","cacheY","drawImage","inBitmap","_getColorFromAnsiIndex","_getBackgroundColor","_getForegroundColor","fontStyle","imageData","color","offset","clearColor","putImageData","_addGlyphToBitmap","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","then","bitmap","BaseCharAtlas","NoneCharAtlas","_didWarmUp","_doWarmUp","_map","_head","_tail","_nodePool","_unlinkNode","prev","_appendNode","tail","count","nodePool","peekValue","head","pop","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","_cell","isFocused","_cursorRenderers","_renderBarCursor","_renderBlockCursor","_renderUnderlineCursor","_clearCursor","_cursorBlinkStateManager","pause","resume","CursorBlinkStateManager","_render","restartBlinkAnimation","isPaused","triggeredByAnimationFrame","cursorY","viewportRelativeCursorY","_renderBlurCursor","isCursorVisible","strokeStyle","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","timeToStart","time","setInterval","onLinkHover","_onLinkHover","onLinkLeave","_onLinkLeave","_clearCurrentLink","middleRowCount","_linkMatchers","_nextLinkMatcherId","_onLinkTooltip","_rowsToLinkify","mouseZoneManager","_rowsTimeoutId","_linkifyRows","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","iterator","hasNext","_doLinkifyRow","first","matcher","matchIndex","validationCallback","hoverTooltipCallback","hoverLeaveCallback","priority","_addLinkMatcherToList","rowIndex","match","rex","RegExp","source","flags","stringIndex","uri","lastIndex","bufferIndex","stringIndexToBufferIndex","isValid","_addLink","exec","_createLinkHoverEvent","SelectionModel_1","Mouse_1","MoveToCell_1","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_scrollLines","_element","_screenElement","_optionsService","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_onLinuxMouseSelection","_onRedrawRequest","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","onTrim","_onTrim","onBufferActivate","_onBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","translateBufferLineToString","bufferLine","isLinuxMouseSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAt","isSelectAllActive","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","selectionStartLength","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","coordinates","moveToCellSequence","activeBuffer","_convertViewportColToCharacterIndex","charIndex","_getWordAt","allowWhitespaceOnlySelection","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","length_2","_isCharWordSeparator","length_3","length_4","trim","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","areSelectionValuesReversed","wordSeparator","wrappedRange","getWrappedRangeForLine","last","startPlusLength","moveToRequestedRow","targetY","bufferService","applicationCursor","wrappedRowsForRow","repeat","wrappedRows","direction","verticalDirection","wrappedRowsCount","currentRow","lineWraps","horizontalDirection","targetX","forward","currentCol","bufferStr","str","rpt","moveHorizontallyOnly","resetStartingRow","moveToRequestedCol","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","connect","destination","base64","binaryString","atob","len","bytes","dataURI","split","RenderDebouncer_1","ScreenDprMonitor_1","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","_rowContainer","_rowElements","_createAccessibilityTreeNode","_topBoundaryFocusListener","_onBoundaryFocus","_bottomBoundaryFocusListener","_refreshRowsDimensions","_renderRowsDebouncer","_renderRows","_refreshRows","_liveRegion","insertAdjacentElement","onA11yChar","char","_onChar","onA11yTab","spaceCount","_onTab","_clearLiveRegion","_screenDprMonitor","boundaryElement","beforeBoundaryElement","getAttribute","relatedTarget","topBoundaryElement","bottomBoundaryElement","newElement","unshift","children","_refreshRowDimensions","MAX_ROWS_TO_READ","keyChar","setSize","posInSet","innerHTML","_announceCharacters","DomRendererRowFactory_1","TERMINAL_CLASS_PREFIX","ROW_CONTAINER_CLASS","SELECTION_CLASS","nextTerminalId","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","documentFragment","_createSelectionElement","endCol_1","colStart","colEnd","cursorAbsoluteY","cursorX","rowElement","createRow","_setCellUnderline","enabled","span","textDecoration","DIM_CLASS","UNDERLINE_CLASS","isCursorRow","cellWidth","lineLength","charElement","swapColor","KEYCODE_KEY_MAPPINGS","48","49","50","51","52","53","54","55","56","57","186","187","188","189","190","191","192","219","220","221","222","applicationCursorMode","modifiers","keyMapping","lastChar","_renderer","charSizeService","_isPaused","_needsFullRefresh","_canvasWidth","_canvasHeight","_onDimensionsChange","_onRefreshRequest","_renderDebouncer","onCharSizeChange","observer_1","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","intersectionRatio","_fireOnCanvasResize","changeOptions","_fullRefresh","Clone_1","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","disableStdin","tabStopWidth","screenKeys","CONSTRUCTOR_ONLY_OPTIONS","_onOptionChange","newValue","_sanitizeAndValidateOption","parentElement","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","BufferSet_1","BufferSet","Buffer_1","_normal","Buffer","fillViewportRows","_alt","_activeBuffer","inactiveBuffer","fillAttr","newCols","newRows","CircularList_1","BufferReflow_1","Marker_1","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","_whitespaceCell","_cols","_rows","CircularList","_getCorrectBufferLength","getWhitespaceCell","relativeY","correctBufferLength","nullCell","newMaxLength","addToY","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","destLineIndex","srcLineIndex","cellsToCopy","wrappedLinesIndex","getWrappedLineTrimmedLength","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","onInsertEmitter","onTrimEmitter","lineIndex","marker","Marker","onInsert","onDelete","onDispose","_removeMarker","startOverscan","endOverscan","BufferStringIterator","_trimRight","_startIndex","_endIndex","_startOverscan","_endOverscan","_current","_maxLength","onDeleteEmitter","_array","_length","newArray","_getCyclicIndex","newLength","deleteCount","items","countToTrim","expandListBy","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","i_1","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_id","_nextId","isDisposed","_onDispose","DEFAULT_DEC_PRIVATE_MODES","_scrollToBottom","_onUserInput","wasUserInput","_addons","instance","loadedAddon","_wrappedAddonDispose","activate"],"mappings":"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","file":"xterm.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Terminal\"] = factory();\n\telse\n\t\troot[\"Terminal\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 24);\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    this._disposables.forEach(d => d.dispose());\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   */\n  public register<T extends IDisposable>(d: T): void {\n    this._disposables.push(d);\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T> {\n  (e: T): void;\n}\n\nexport interface IEvent<T> {\n  (listener: (e: T) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T> {\n  event: IEvent<T>;\n  fire(data: T): void;\n}\n\nexport class EventEmitter<T> implements IEventEmitter<T> {\n  private _listeners: IListener<T>[] = [];\n  private _event?: IEvent<T>;\n\n  public get event(): IEvent<T> {\n    if (!this._event) {\n      this._event = (listener: (e: T) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            for (let i = 0; i < this._listeners.length; i++) {\n              if (this._listeners[i] === listener) {\n                this._listeners.splice(i, 1);\n                return;\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(data: T): void {\n    const queue: IListener<T>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, data);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..31 (32th bit unused)\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 4 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content: number = 0;\n  public fg: number = 0;\n  public bg: number = 0;\n  public combinedData: string = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n  static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    return newObj;\n  }\n\n  // data\n  public fg: number = 0;\n  public bg: number = 0;\n\n  // flags\n  public isInverse(): number   { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number      { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number     { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number    { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number       { return this.bg & BgFlags.DIM; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  useCapture?: boolean\n): IDisposable {\n  node.addEventListener(type, handler, useCapture);\n  return {\n    dispose: () => {\n      if (!handler) {\n        // Already disposed\n        return;\n      }\n      node.removeEventListener(type, handler, useCapture);\n    }\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = !!~userAgent.indexOf('Firefox');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = contains(['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'], platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = contains(['Windows', 'Win16', 'Win32', 'WinCE'], platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n\n/**\n * Return if the given array contains the given element\n * @param arr The array to search for the given element.\n * @param el The element to look for into the array\n */\nfunction contains(arr: any[], el: any): boolean {\n  return arr.indexOf(el) >= 0;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF)) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF)) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderLayer } from './Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { ITerminal } from '../Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from './atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from './atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from './atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    this._container.removeChild(this._canvas);\n    if (this._charAtlas) {\n      this._charAtlas.dispose();\n    }\n  }\n\n  private _initCanvas(): void {\n    this._ctx = this._canvas.getContext('2d', {alpha: this._alpha});\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(terminal: ITerminal): void {}\n  public onBlur(terminal: ITerminal): void {}\n  public onFocus(terminal: ITerminal): void {}\n  public onCursorMove(terminal: ITerminal): void {}\n  public onGridChanged(terminal: ITerminal, startRow: number, endRow: number): void {}\n  public onSelectionChanged(terminal: ITerminal, start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {}\n\n  public setColors(terminal: ITerminal, colorSet: IColorSet): void {\n    this._refreshCharAtlas(terminal, colorSet);\n  }\n\n  protected _setTransparency(terminal: ITerminal, alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = <HTMLCanvasElement>this._canvas.cloneNode();\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(terminal, this._colors);\n    this.onGridChanged(terminal, 0, terminal.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param terminal The terminal.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(terminal: ITerminal, colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(terminal, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(terminal: ITerminal, dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(terminal, this._colors);\n  }\n\n  public abstract reset(terminal: ITerminal): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n        width * this._scaledCellWidth,\n        window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        window.devicePixelRatio,\n        this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n        x * this._scaledCellWidth + window.devicePixelRatio / 2,\n        y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n        width * this._scaledCellWidth - window.devicePixelRatio,\n        (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n          x * this._scaledCellWidth,\n          y * this._scaledCellHeight,\n          width * this._scaledCellWidth,\n          height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n          x * this._scaledCellWidth,\n          y * this._scaledCellHeight,\n          width * this._scaledCellWidth,\n          height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param terminal The terminal.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(terminal: ITerminal, cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(terminal, false, false);\n    this._ctx.textBaseline = 'middle';\n    this._clipRow(terminal, y);\n    this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param terminal The terminal.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(terminal: ITerminal, cell: ICellData, x: number, y: number): void {\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(terminal, cell, x, y);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = terminal.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8 && fg !== INVERTED_DEFAULT_COLOR;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas && this._charAtlas.draw(\n      this._ctx,\n      this._currentGlyphIdentifier,\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop\n    );\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(terminal, cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param terminal The terminal.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(terminal: ITerminal, cell: ICellData, x: number, y: number): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(terminal, !!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = 'middle';\n\n    if (cell.isInverse()) {\n      if (cell.isBgDefault()) {\n        this._ctx.fillStyle = this._colors.background.css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        this._ctx.fillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n    } else {\n      if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (terminal.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(terminal, y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n    this._ctx.restore();\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param terminal The terminal.\n   * @param y The row to clip.\n   */\n  private _clipRow(terminal: ITerminal, y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n        0,\n        y * this._scaledCellHeight,\n        terminal.cols * this._scaledCellWidth,\n        this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param terminal The terminal.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(terminal: ITerminal, isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? terminal.options.fontWeightBold : terminal.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${terminal.options.fontSize * window.devicePixelRatio}px ${terminal.options.fontFamily}`;\n  }\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray\n  | Int8Array | Int16Array | Int32Array\n  | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { DEFAULT_COLOR, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number): void {\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData): void {\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport let promptLabel = 'Terminal input';\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { fill } from 'common/TypedArrayUtils';\n\nexport const wcwidth = (function(opts: {nul: number, control: number}): (ucs: number) => number {\n  // extracted from https://www.cl.cam.ac.uk/%7Emgk25/ucs/wcwidth.c\n  // combining characters\n  const COMBINING_BMP = [\n    [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n    [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n    [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n    [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n    [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n    [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n    [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n    [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n    [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n    [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n    [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n    [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n    [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n    [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n    [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n    [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n    [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n    [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n    [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n    [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n    [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n    [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n    [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n    [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n    [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n    [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n    [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n    [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n    [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n    [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n    [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n    [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n    [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n    [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n    [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n    [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n    [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n    [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n    [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n    [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n    [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n    [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n    [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n  ];\n  const COMBINING_HIGH = [\n    [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n    [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n    [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n    [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n    [0xE0100, 0xE01EF]\n  ];\n  // binary search\n  function bisearch(ucs: number, data: number[][]): boolean {\n    let min = 0;\n    let max = data.length - 1;\n    let mid;\n    if (ucs < data[0][0] || ucs > data[max][1]) {\n      return false;\n    }\n    while (max >= min) {\n      mid = (min + max) >> 1;\n      if (ucs > data[mid][1]) {\n        min = mid + 1;\n      } else if (ucs < data[mid][0]) {\n        max = mid - 1;\n      } else {\n        return true;\n      }\n    }\n    return false;\n  }\n  function wcwidthHigh(ucs: number): 0 | 1 | 2 {\n    if (bisearch(ucs, COMBINING_HIGH)) {\n      return 0;\n    }\n    if ((ucs >= 0x20000 && ucs <= 0x2fffd) || (ucs >= 0x30000 && ucs <= 0x3fffd)) {\n      return 2;\n    }\n    return 1;\n  }\n  const control = opts.control | 0;\n\n  // create lookup table for BMP plane\n  const table = new Uint8Array(65536);\n  fill(table, 1);\n  table[0] = opts.nul;\n  // control chars\n  fill(table, opts.control, 1, 32);\n  fill(table, opts.control, 0x7f, 0xa0);\n\n  // apply wide char rules first\n  // wide chars\n  fill(table, 2, 0x1100, 0x1160);\n  table[0x2329] = 2;\n  table[0x232a] = 2;\n  fill(table, 2, 0x2e80, 0xa4d0);\n  table[0x303f] = 1;  // wrongly in last line\n\n  fill(table, 2, 0xac00, 0xd7a4);\n  fill(table, 2, 0xf900, 0xfb00);\n  fill(table, 2, 0xfe10, 0xfe1a);\n  fill(table, 2, 0xfe30, 0xfe70);\n  fill(table, 2, 0xff00, 0xff61);\n  fill(table, 2, 0xffe0, 0xffe7);\n\n  // apply combining last to ensure we overwrite\n  // wrongly wide set chars:\n  //    the original algo evals combining first and falls\n  //    through to wide check so we simply do here the opposite\n  // combining 0\n  for (let r = 0; r < COMBINING_BMP.length; ++r) {\n    fill(table, 0, COMBINING_BMP[r][0], COMBINING_BMP[r][1] + 1);\n  }\n\n  return function (num: number): number {\n    if (num < 32) {\n      return control | 0;\n    }\n    if (num < 127) {\n      return 1;\n    }\n    if (num < 65536) {\n      return table[num];\n    }\n    // do a full search for high codepoints\n    return wcwidthHigh(num);\n  };\n})({nul: 0, control: 0});  // configurable options\n\n/**\n * Get the terminal cell width for a string.\n */\nexport function getStringCellWidth(s: string): number {\n  let result = 0;\n  const length = s.length;\n  for (let i = 0; i < length; ++i) {\n    let code = s.charCodeAt(i);\n    // surrogate pair first\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (++i >= length) {\n        // this should not happen with strings retrieved from\n        // Buffer.translateToString as it converts from UTF-32\n        // and therefore always should contain the second part\n        // for any other string we still have to handle it somehow:\n        // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n        return result + wcwidth(code);\n      }\n      const second = s.charCodeAt(i);\n      // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n      // otherwise treat them independently (UCS-2 behavior)\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        result += wcwidth(second);\n      }\n    }\n    result += wcwidth(code);\n  }\n  return result;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from '../../Types';\nimport { generateConfig, configEquals } from './CharAtlasUtils';\nimport { BaseCharAtlas } from './BaseCharAtlas';\nimport { DynamicCharAtlas } from './DynamicCharAtlas';\nimport { ICharAtlasConfig } from './Types';\nimport { IColorSet } from 'browser/Types';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: ITerminal[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n * @param terminal The terminal.\n * @param colors The colors to use.\n */\nexport function acquireCharAtlas(\n  terminal: ITerminal,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, terminal, colors);\n\n  // Check to see if the terminal already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(terminal);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the terminal from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the terminal to the cache entry and return\n      entry.ownedBy.push(terminal);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [terminal]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n * @param terminal The terminal to remove.\n */\nexport function removeTerminalFromCache(terminal: ITerminal): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(terminal);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only terminal\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from '../../Types';\nimport { ICharAtlasConfig } from './Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet } from 'browser/Types';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, terminal: ITerminal, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors = <IColorSet>{\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: null,\n    cursorAccent: null,\n    selection: null,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(0, 16)\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: terminal.options.fontFamily,\n    fontSize: terminal.options.fontSize,\n    fontWeight: terminal.options.fontWeight,\n    fontWeightBold: terminal.options.fontWeightBold,\n    allowTransparency: terminal.options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\n\nconst DEFAULT_FOREGROUND = fromHex('#ffffff');\nconst DEFAULT_BACKGROUND = fromHex('#000000');\nconst DEFAULT_CURSOR = fromHex('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = fromHex('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF77\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS. Do not mutate DEFAULT_ANSI_COLORS, instead make a copy\n// and mutate that.\nexport const DEFAULT_ANSI_COLORS = (() => {\n  const colors = [\n    // dark:\n    fromHex('#2e3436'),\n    fromHex('#cc0000'),\n    fromHex('#4e9a06'),\n    fromHex('#c4a000'),\n    fromHex('#3465a4'),\n    fromHex('#75507b'),\n    fromHex('#06989a'),\n    fromHex('#d3d7cf'),\n    // bright:\n    fromHex('#555753'),\n    fromHex('#ef2929'),\n    fromHex('#8ae234'),\n    fromHex('#fce94f'),\n    fromHex('#729fcf'),\n    fromHex('#ad7fa8'),\n    fromHex('#34e2e2'),\n    fromHex('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`,\n      // Use >>> 0 to force a conversion to an unsigned int\n      rgba: ((r << 24) | (g << 16) | (b << 8) | 0xFF) >>> 0\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    const ch = toPaddedHex(c);\n    colors.push({\n      css: `#${ch}${ch}${ch}`,\n      rgba: ((c << 24) | (c << 16) | (c << 8) | 0xFF) >>> 0\n    });\n  }\n\n  return colors;\n})();\n\nfunction fromHex(css: string): IColor {\n  return {\n    css,\n    rgba: parseInt(css.slice(1), 16) << 8 | 0xFF\n  };\n}\n\nfunction toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selection: DEFAULT_SELECTION,\n      ansi: DEFAULT_ANSI_COLORS.slice()\n    };\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selection = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    if (!allowTransparency && data[3] !== 0xFF) {\n      // Ideally we'd just ignore the alpha channel, but...\n      //\n      // Browsers may not give back exactly the same RGB values we put in, because most/all\n      // convert the color to a pre-multiplied representation. getImageData converts that back to\n      // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n      // on their own.\n      //\n      // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n      // into 0x00000000.\n      //\n      // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n      // pixels that have just been set using putImageData() might be returned to an equivalent\n      // getImageData() as different values.\"\n      // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n      //\n      // So let's just use the fallback color in this case instead.\n      console.warn(\n        `Color: ${css} is using transparency, but allowTransparency is false. ` +\n        `Using fallback ${fallback.css}.`\n      );\n      return fallback;\n    }\n\n    return {\n      css,\n      rgba: (data[0] << 24 | data[1] << 16 | data[2] << 8 | data[3]) >>> 0\n    };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoinerRegistry, ICharacterJoiner } from 'browser/renderer/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerRegistry implements ICharacterJoinerRegistry {\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(private _bufferService: IBufferService) { }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    const joinedRanges: [number, number][] = this._characterJoiners[0].handler(text);\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      const joinerRanges = this._characterJoiners[i].handler(text);\n      for (let j = 0; j < joinerRanges.length; j++) {\n        CharacterJoinerRegistry._mergeRanges(joinedRanges, joinerRanges[j]);\n      }\n    }\n    this._stringRangesToCellRanges(joinedRanges, lineData, startCol);\n    return joinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          inRange = false;\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal, IMouseZoneManager, IMouseZone } from './Types';\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService } from 'browser/services/Services';\n\nconst HOVER_DURATION = 500;\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number = null;\n  private _currentZone: IMouseZone = null;\n  private _lastHoverCoords: [number, number] = [null, null];\n  private _initialSelectionLength: number;\n\n  constructor(\n    private _terminal: ITerminal,\n    private _mouseService: IMouseService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._terminal.element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!end) {\n      start = 0;\n      end = this._terminal.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = null;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._terminal.element.addEventListener('mousemove', this._mouseMoveListener);\n      this._terminal.element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._terminal.element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._terminal.element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._terminal.element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._terminal.element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = null;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = <number><any>setTimeout(() => this._onTooltip(e), HOVER_DURATION);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = null;\n    const zone = this._findZoneEventAt(e);\n    if (zone && zone.tooltipCallback) {\n      zone.tooltipCallback(e);\n    }\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._terminal.getSelection().length;\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone) {\n      if (zone.willLinkActivate(e)) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = null;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._terminal.getSelection().length;\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone {\n    const coords = this._mouseService.getCoords(e, this._terminal.screenElement, this._terminal.cols, this._terminal.rows);\n    if (!coords) {\n      return null;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return null;\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IDisposable {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number, rowEnd: number, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    this._rowStart = Math.max(this._rowStart, 0);\n    this._rowEnd = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Run render callback\n    this._renderCallback(this._rowStart, this._rowEnd);\n\n    // Reset debouncer\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._resolutionMediaMatchList || !this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] ? clone(val[key], depth - 1) : val[key]);\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, ITerminalOptions, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { ITerminal } from '../Types';\nimport { IBufferLine } from 'common/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { Terminal as TerminalCore } from '../Terminal';\nimport * as Strings from '../browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { AddonManager } from './AddonManager';\nimport { IParams } from 'common/parser/Types';\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n  }\n\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n\n  public get element(): HTMLElement { return this._core.element; }\n  public get textarea(): HTMLTextAreaElement { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferApi { return new BufferApiView(this._core.buffer); }\n  public get markers(): ReadonlyArray<IMarker> { return this._core.markers; }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public writeln(data: string): void {\n    this._core.writeln(data);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public addCsiHandler(flag: string, callback: (params: (number | number[])[], collect: string) => boolean): IDisposable {\n    return this._core.addCsiHandler(flag, (params: IParams, collect: string) => callback(params.toArray(), collect));\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._core.addOscHandler(ident, callback);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public addMarker(cursorYOffset: number): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string): void {\n    this._core.write(data);\n  }\n  public writeUtf8(data: Uint8Array): void {\n    this._core.writeUtf8(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'fontWeight' | 'fontWeightBold' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'debug' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'screenKeys' | 'useFlowControl' | 'visualBell'): boolean;\n  public getOption(key: 'colors'): string[];\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'handler'): (data: string) => void;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'debug' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'screenKeys' | 'useFlowControl' | 'visualBell', value: boolean): void;\n  public setOption(key: 'colors', value: string[]): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'handler', value: (data: string) => void): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public static applyAddon(addon: any): void {\n    addon.apply(Terminal);\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    values.forEach(value => {\n      if (value % 1 !== 0) {\n        throw new Error('This API does not accept floating point numbers');\n      }\n    });\n  }\n}\n\nclass BufferApiView implements IBufferApi {\n  constructor(private _buffer: IBuffer) {}\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n}\n\nclass BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) {}\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public getCell(x: number): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n    return new BufferCellApiView(this._line, x);\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n\nclass BufferCellApiView implements IBufferCellApi {\n  constructor(private _line: IBufferLine, private _x: number) {}\n  public get char(): string { return this._line.getString(this._x); }\n  public get width(): number { return this._line.getWidth(this._x); }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { IInputHandlingTerminal, IViewport, ICompositionHelper, ITerminalOptions, ITerminal, IBrowser, ILinkifier, ILinkMatcherOptions, CustomKeyEventHandler, LinkMatcherHandler, IMouseZoneManager } from './Types';\nimport { IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { CompositionHelper } from './CompositionHelper';\nimport { Viewport } from './Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, pasteHandler, copyHandler } from './Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { InputHandler } from './InputHandler';\nimport { Renderer } from './renderer/Renderer';\nimport { Linkifier } from './Linkifier';\nimport { SelectionService } from './browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from './browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from './MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition } from 'xterm';\nimport { removeTerminalFromCache } from './renderer/atlas/CharAtlasCache';\nimport { DomRenderer } from './renderer/dom/DomRenderer';\nimport { IKeyboardEvent, KeyboardResultType, ICharset, IBufferLine, IAttributeData } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { applyWindowsMode } from './WindowsMode';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { IOptionsService, IBufferService, ICoreService } from 'common/services/Services';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { Attributes } from 'common/buffer/Constants';\nimport { MouseService } from 'browser/services/MouseService';\nimport { IParams } from 'common/parser/Types';\nimport { CoreService } from 'common/services/CoreService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document = (typeof window !== 'undefined') ? window.document : null;\n\n/**\n * The amount of write requests to queue before sending an XOFF signal to the\n * pty process. This number must be small in order for ^C and similar sequences\n * to be responsive.\n */\nconst WRITE_BUFFER_PAUSE_THRESHOLD = 5;\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class Terminal extends Disposable implements ITerminal, IDisposable, IInputHandlingTerminal {\n  public textarea: HTMLTextAreaElement;\n  public element: HTMLElement;\n  public screenElement: HTMLElement;\n\n  /**\n   * The HTMLElement that the terminal is created in, set by Terminal.open.\n   */\n  private _parent: HTMLElement;\n  private _context: Window;\n  private _document: Document;\n  private _viewportScrollArea: HTMLElement;\n  private _viewportElement: HTMLElement;\n  private _helperContainer: HTMLElement;\n  private _compositionView: HTMLElement;\n\n  private _visualBellTimer: number;\n\n  public browser: IBrowser = <any>Browser;\n\n  // TODO: We should remove options once components adopt optionsService\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n\n  // TODO: This can be changed to an enum or boolean, 0 and 1 seem to be the only options\n  public cursorState: number;\n  public cursorHidden: boolean;\n\n  private _customKeyEventHandler: CustomKeyEventHandler;\n\n  // common services\n  private _bufferService: IBufferService;\n  private _coreService: ICoreService;\n  public optionsService: IOptionsService;\n\n  // browser services\n  private _charSizeService: ICharSizeService;\n  private _mouseService: IMouseService;\n  private _renderService: IRenderService;\n  private _selectionService: ISelectionService;\n  private _soundService: ISoundService;\n\n  // modes\n  public applicationKeypad: boolean;\n  public originMode: boolean;\n  public insertMode: boolean;\n  public wraparoundMode: boolean; // defaults: xterm - true, vt100 - false\n  public bracketedPasteMode: boolean;\n\n  // charset\n  // The current charset\n  public charset: ICharset;\n  public gcharset: number;\n  public glevel: number;\n  public charsets: ICharset[];\n\n  // mouse properties\n  private _decLocator: boolean; // This is unstable and never set\n  public x10Mouse: boolean;\n  public vt200Mouse: boolean;\n  private _vt300Mouse: boolean; // This is unstable and never set\n  public normalMouse: boolean;\n  public mouseEvents: boolean;\n  public sendFocus: boolean;\n  public utfMouse: boolean;\n  public sgrMouse: boolean;\n  public urxvtMouse: boolean;\n\n  // misc\n  private _refreshStart: number;\n  private _refreshEnd: number;\n  public savedCols: number;\n\n  public curAttrData: IAttributeData;\n  private _eraseAttrData: IAttributeData;\n\n  public params: (string | number)[];\n  public currentParam: string | number;\n\n  // user input states\n  public writeBuffer: string[];\n  public writeBufferUtf8: Uint8Array[];\n  private _writeInProgress: boolean;\n\n  /**\n   * Whether _xterm.js_ sent XOFF in order to catch up with the pty process.\n   * This is a distinct state from writeStopped so that if the user requested\n   * XOFF via ^S that it will not automatically resume when the writeBuffer goes\n   * below threshold.\n   */\n  private _xoffSentToCatchUp: boolean;\n\n  /** Whether writing has been stopped as a result of XOFF */\n  // private _writeStopped: boolean;\n\n  // Store if user went browsing history in scrollback\n  private _userScrolling: boolean;\n\n  private _inputHandler: InputHandler;\n  public linkifier: ILinkifier;\n  public viewport: IViewport;\n  private _compositionHelper: ICompositionHelper;\n  private _mouseZoneManager: IMouseZoneManager;\n  private _accessibilityManager: AccessibilityManager;\n  private _colorManager: ColorManager;\n  private _theme: ITheme;\n  private _windowsMode: IDisposable | undefined;\n\n  // bufferline to clone/copy from for new blank lines\n  private _blankLine: IBufferLine = null;\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  public onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this.onA11yCharEmitter.event; }\n  public onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this.onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: ITerminalOptions = {}\n  ) {\n    super();\n\n    // Setup and initialize common services\n    this.optionsService = new OptionsService(options);\n    this._bufferService = new BufferService(this.optionsService);\n    this._coreService = new CoreService(() => this.scrollToBottom(), this._bufferService, this.optionsService);\n    this._coreService.onData(e => this._onData.fire(e));\n\n    this._setupOptionsListeners();\n    this._setup();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    if (this._windowsMode) {\n      this._windowsMode.dispose();\n      this._windowsMode = undefined;\n    }\n    this._customKeyEventHandler = null;\n    removeTerminalFromCache(this);\n    this.write = () => {};\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  }\n\n  private _setup(): void {\n    this._parent = document ? document.body : null;\n\n    this.cursorState = 0;\n    this.cursorHidden = false;\n    this._customKeyEventHandler = null;\n\n    // modes\n    this.applicationKeypad = false;\n    this.originMode = false;\n    this.insertMode = false;\n    this.wraparoundMode = true; // defaults: xterm - true, vt100 - false\n    this.bracketedPasteMode = false;\n\n    // charset\n    this.charset = null;\n    this.gcharset = null;\n    this.glevel = 0;\n    // TODO: Can this be just []?\n    this.charsets = [null];\n\n    this.curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrData = DEFAULT_ATTR_DATA.clone();\n\n    this.params = [];\n    this.currentParam = 0;\n\n    // user input states\n    this.writeBuffer = [];\n    this.writeBufferUtf8 = [];\n    this._writeInProgress = false;\n\n    this._xoffSentToCatchUp = false;\n    // this._writeStopped = false;\n    this._userScrolling = false;\n\n    // Register input handler and refire/handle events\n    this._inputHandler = new InputHandler(this, this._coreService);\n    this._inputHandler.onCursorMove(() => this._onCursorMove.fire());\n    this._inputHandler.onLineFeed(() => this._onLineFeed.fire());\n    this.register(this._inputHandler);\n\n    this._selectionService = this._selectionService || null;\n    this.linkifier = this.linkifier || new Linkifier(this);\n    this._mouseZoneManager = this._mouseZoneManager || null;\n\n    if (this.options.windowsMode) {\n      this._windowsMode = applyWindowsMode(this);\n    }\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  public get buffers(): IBufferSet {\n    return this._bufferService.buffers;\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  public eraseAttrData(): IAttributeData {\n    this._eraseAttrData.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrData.bg |= this.curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrData;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  public get isFocused(): boolean {\n    return document.activeElement === this.textarea && document.hasFocus();\n  }\n\n  private _setupOptionsListeners(): void {\n    // TODO: These listeners should be owned by individual components\n    this.optionsService.onOptionChange(key => {\n      switch (key) {\n        case 'fontFamily':\n        case 'fontSize':\n          // When the font changes the size of the cells may change which requires a renderer clear\n          if (this._renderService) {\n            this._renderService.clear();\n          }\n          if (this._charSizeService) {\n            this._charSizeService.measure();\n          }\n          break;\n        case 'drawBoldTextInBrightColors':\n        case 'letterSpacing':\n        case 'lineHeight':\n        case 'fontWeight':\n        case 'fontWeightBold':\n          // When the font changes the size of the cells may change which requires a renderer clear\n          if (this._renderService) {\n            this._renderService.clear();\n            this._renderService.onResize(this.cols, this.rows);\n            this.refresh(0, this.rows - 1);\n          }\n          break;\n        case 'rendererType':\n          if (this._renderService) {\n            this._renderService.setRenderer(this._createRenderer());\n          }\n          break;\n        case 'scrollback':\n          this.buffers.resize(this.cols, this.rows);\n          if (this.viewport) {\n            this.viewport.syncScrollArea();\n          }\n          break;\n        case 'screenReaderMode':\n          if (this.optionsService.options.screenReaderMode) {\n            if (!this._accessibilityManager && this._renderService) {\n              this._accessibilityManager = new AccessibilityManager(this, this._renderService.dimensions);\n            }\n          } else {\n            if (this._accessibilityManager) {\n              this._accessibilityManager.dispose();\n              this._accessibilityManager = null;\n            }\n          }\n          break;\n        case 'tabStopWidth': this.buffers.setupTabStops(); break;\n        case 'theme':\n          this._setTheme(this.optionsService.options.theme);\n          break;\n        case 'scrollback':\n          const newBufferLength = this.rows + this.optionsService.options.scrollback;\n          if (this.buffer.lines.length > newBufferLength) {\n            const amountToTrim = this.buffer.lines.length - newBufferLength;\n            const needsRefresh = (this.buffer.ydisp - amountToTrim < 0);\n            this.buffer.lines.trimStart(amountToTrim);\n            this.buffer.ybase = Math.max(this.buffer.ybase - amountToTrim, 0);\n            this.buffer.ydisp = Math.max(this.buffer.ydisp - amountToTrim, 0);\n            if (needsRefresh) {\n              this.refresh(0, this.rows - 1);\n            }\n          }\n        case 'windowsMode':\n          if (this.optionsService.options.windowsMode) {\n            if (!this._windowsMode) {\n              this._windowsMode = applyWindowsMode(this);\n            }\n          } else {\n            if (this._windowsMode) {\n              this._windowsMode.dispose();\n              this._windowsMode = undefined;\n            }\n          }\n          break;\n      }\n    });\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element.classList.add('focus');\n    this.showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent) => pasteHandler(event, this.textarea, this.bracketedPasteMode, e => this._coreService.triggerDataEvent(e, true));\n    this.register(addDisposableDomListener(this.textarea, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea, this.screenElement);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'compositionstart', () => this._compositionHelper.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea, 'compositionend', () => this._compositionHelper.compositionend()));\n    this.register(this.onRender(() => this._compositionHelper.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    this._parent = parent || this._parent;\n\n    if (!this._parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    // Grab global elements\n    this._context = this._parent.ownerDocument.defaultView;\n    this._document = this._parent.ownerDocument;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    this._parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    this._charSizeService = new CharSizeService(this._document, this._helperContainer, this.optionsService);\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = new CompositionHelper(this.textarea, this._compositionView, this, this._charSizeService, this._coreService);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._theme = this.options.theme;\n    this.options.theme = null;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this._colorManager.setTheme(this._theme);\n\n    const renderer = this._createRenderer();\n    this._renderService = new RenderService(renderer, this.rows, this.screenElement, this.optionsService, this._charSizeService);\n    this._renderService.onRender(e => this._onRender.fire(e));\n    this.onResize(e => this._renderService.resize(e.cols, e.rows));\n\n    this._soundService = new SoundService(this.optionsService);\n    this._mouseService = new MouseService(this._renderService, this._charSizeService);\n\n    this._mouseZoneManager = new MouseZoneManager(this, this._mouseService);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager.clearAll()));\n    this.linkifier.attachToDom(this._mouseZoneManager);\n\n    this.viewport = new Viewport(this, this._viewportElement, this._viewportScrollArea, this._renderService.dimensions, this._charSizeService);\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => this._renderService.onCursorMove()));\n    this.register(this.onResize(() => this._renderService.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService.onBlur()));\n    this.register(this.onFocus(() => this._renderService.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport.syncScrollArea()));\n\n    this._selectionService = new SelectionService(\n      (amount: number, suppressEvent: boolean) => this.scrollLines(amount, suppressEvent),\n      this.element, this.screenElement, this._charSizeService, this._bufferService, this._coreService,\n      this._mouseService, this.optionsService\n    );\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService.onMouseDown(e)));\n    this.register(this._selectionService.onRedrawRequest(e => this._renderService.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea.value = text;\n      this.textarea.focus();\n      this.textarea.select();\n    }));\n    this.register(this.onScroll(() => {\n      this.viewport.syncScrollArea();\n      this._selectionService.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService.refresh()));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    this.element.classList.toggle('enable-mouse-events', this.mouseEvents);\n    if (this.mouseEvents) {\n      this._selectionService.disable();\n    } else {\n      this._selectionService.enable();\n    }\n    this._inputHandler.setBrowserServices(this._selectionService);\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService.dimensions);\n      this._accessibilityManager.register(this._renderService.onDimensionsChange(e => this._accessibilityManager.setDimensions(e)));\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return new Renderer(this, this._colorManager.colors, this._charSizeService); break;\n      case 'dom': return new DomRenderer(this, this._colorManager.colors, this._charSizeService, this.optionsService); break;\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    if (this._colorManager) {\n      this._colorManager.setTheme(theme);\n    }\n    if (this._renderService) {\n      this._renderService.setColors(this._colorManager.colors);\n    }\n    if (this.viewport) {\n      this.viewport.onThemeChange(this._colorManager.colors);\n    }\n  }\n\n  /**\n   * XTerm mouse events\n   * http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#Mouse%20Tracking\n   * To better understand these\n   * the xterm code is very helpful:\n   * Relevant files:\n   *   button.c, charproc.c, misc.c\n   * Relevant functions in xterm/button.c:\n   *   BtnCode, EmitButtonCode, EditorButton, SendMousePosition\n   */\n  public bindMouse(): void {\n    const el = this.element;\n    const self = this;\n    let pressed = 32;\n\n    // mouseup, mousedown, wheel\n    // left click: ^[[M 3<^[[M#3<\n    // wheel up: ^[[M`3>\n    function sendButton(ev: MouseEvent | WheelEvent): void {\n      let button;\n      let pos;\n\n      // get the xterm-style button\n      button = getButton(ev);\n\n      // get mouse coordinates\n      pos = self._mouseService.getRawByteCoords(ev, self.screenElement, self.cols, self.rows);\n      if (!pos) return;\n\n      sendEvent(button, pos);\n\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousedown':\n          pressed = button;\n          break;\n        case 'mouseup':\n          // keep it at the left\n          // button, just in case.\n          pressed = 32;\n          break;\n        case 'wheel':\n          // nothing. don't\n          // interfere with\n          // `pressed`.\n          break;\n      }\n    }\n\n    // motion example of a left click:\n    // ^[[M 3<^[[M@4<^[[M@5<^[[M@6<^[[M@7<^[[M#7<\n    function sendMove(ev: MouseEvent): void {\n      let button = pressed;\n      const pos = self._mouseService.getRawByteCoords(ev, self.screenElement, self.cols, self.rows);\n      if (!pos) return;\n\n      // buttons marked as motions\n      // are incremented by 32\n      button += 32;\n\n      sendEvent(button, pos);\n    }\n\n    // encode button and\n    // position to characters\n    function encode(data: number[], ch: number): void {\n      if (!self.utfMouse) {\n        if (ch === 255) {\n          data.push(0);\n          return;\n        }\n        if (ch > 127) ch = 127;\n        data.push(ch);\n      } else {\n        if (ch > 2047) {\n          data.push(2047);\n          return;\n        }\n        data.push(ch);\n      }\n    }\n\n    // send a mouse event:\n    // regular/utf8: ^[[M Cb Cx Cy\n    // urxvt: ^[[ Cb ; Cx ; Cy M\n    // sgr: ^[[ Cb ; Cx ; Cy M/m\n    // vt300: ^[[ 24(1/3/5)~ [ Cx , Cy ] \\r\n    // locator: CSI P e ; P b ; P r ; P c ; P p & w\n    function sendEvent(button: number, pos: {x: number, y: number}): void {\n      if (self._vt300Mouse) {\n        // NOTE: Unstable.\n        // http://www.vt100.net/docs/vt3xx-gp/chapter15.html\n        button &= 3;\n        pos.x -= 32;\n        pos.y -= 32;\n        let data = C0.ESC + '[24';\n        if (button === 0) data += '1';\n        else if (button === 1) data += '3';\n        else if (button === 2) data += '5';\n        else if (button === 3) return;\n        else data += '0';\n        data += '~[' + pos.x + ',' + pos.y + ']\\r';\n        self._coreService.triggerDataEvent(data, true);\n        return;\n      }\n\n      if (self._decLocator) {\n        // NOTE: Unstable.\n        button &= 3;\n        pos.x -= 32;\n        pos.y -= 32;\n        if (button === 0) button = 2;\n        else if (button === 1) button = 4;\n        else if (button === 2) button = 6;\n        else if (button === 3) button = 3;\n        self._coreService.triggerDataEvent(C0.ESC + '['\n                  + button\n                  + ';'\n                  + (button === 3 ? 4 : 0)\n                  + ';'\n                  + pos.y\n                  + ';'\n                  + pos.x\n                  + ';'\n                  // Not sure what page is meant to be\n                  + (<any>pos).page || 0\n                  + '&w', true);\n        return;\n      }\n\n      if (self.urxvtMouse) {\n        pos.x -= 32;\n        pos.y -= 32;\n        pos.x++;\n        pos.y++;\n        self._coreService.triggerDataEvent(C0.ESC + '[' + button + ';' + pos.x + ';' + pos.y + 'M', true);\n        return;\n      }\n\n      if (self.sgrMouse) {\n        pos.x -= 32;\n        pos.y -= 32;\n        self._coreService.triggerDataEvent(C0.ESC + '[<'\n                  + (((button & 3) === 3 ? button & ~3 : button) - 32)\n                  + ';'\n                  + pos.x\n                  + ';'\n                  + pos.y\n                  + ((button & 3) === 3 ? 'm' : 'M'), true);\n        return;\n      }\n\n      const data: number[] = [];\n\n      encode(data, button);\n      encode(data, pos.x);\n      encode(data, pos.y);\n\n      self._coreService.triggerDataEvent(C0.ESC + '[M' + String.fromCharCode.apply(String, data), true);\n    }\n\n    function getButton(ev: MouseEvent): number {\n      let button;\n      let shift;\n      let meta;\n      let ctrl;\n      let mod;\n\n      // two low bits:\n      // 0 = left\n      // 1 = middle\n      // 2 = right\n      // 3 = release\n      // wheel up/down:\n      // 1, and 2 - with 64 added\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousedown':\n          button = ev.button !== null && ev.button !== undefined\n            ? +ev.button\n          : ev.which !== null && ev.which !== undefined\n            ? ev.which - 1\n          : null;\n          break;\n        case 'mouseup':\n          button = 3;\n          break;\n        case 'DOMMouseScroll':\n          button = ev.detail < 0\n            ? 64\n          : 65;\n          break;\n        case 'wheel':\n          button = (<WheelEvent>ev).deltaY < 0\n            ? 64\n          : 65;\n          break;\n      }\n\n      // next three bits are the modifiers:\n      // 4 = shift, 8 = meta, 16 = control\n      shift = ev.shiftKey ? 4 : 0;\n      meta = ev.metaKey ? 8 : 0;\n      ctrl = ev.ctrlKey ? 16 : 0;\n      mod = shift | meta | ctrl;\n\n      // no mods\n      if (self.vt200Mouse) {\n        // ctrl only\n        mod &= ctrl;\n      } else if (!self.normalMouse) {\n        mod = 0;\n      }\n\n      // increment to SP\n      button = (32 + (mod << 2)) + button;\n\n      return button;\n    }\n\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n\n      // Prevent the focus on the textarea from getting lost\n      // and make sure we get focused on mousedown\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.mouseEvents || this._selectionService.shouldForceSelection(ev)) {\n        return;\n      }\n\n      // send the button\n      sendButton(ev);\n\n      // fix for odd bug\n      // if (this.vt200Mouse && !this.normalMouse) {\n      if (this.vt200Mouse) {\n        (<any>ev).overrideType = 'mouseup';\n        sendButton(ev);\n        return this.cancel(ev);\n      }\n\n      // TODO: All mouse handling should be pulled into its own file.\n\n      // bind events\n      let moveHandler: (event: MouseEvent) => void;\n      if (this.normalMouse) {\n        moveHandler = (event: MouseEvent) => {\n          // Do nothing if normal mouse mode is on. This can happen if the mouse is held down when the\n          // terminal exits normalMouse mode.\n          if (!this.normalMouse) {\n            return;\n          }\n          sendMove(event);\n        };\n        // TODO: these event listeners should be managed by the disposable, the Terminal reference may\n        // be kept aroud if Terminal.dispose is fired when the mouse is down\n        this._document.addEventListener('mousemove', moveHandler);\n      }\n\n      // x10 compatibility mode can't send button releases\n      const handler = (ev: MouseEvent) => {\n        if (this.normalMouse && !this.x10Mouse) {\n          sendButton(ev);\n        }\n        if (moveHandler) {\n          // Even though this should only be attached when this.normalMouse is true, holding the\n          // mouse button down when normalMouse changes can happen. Just always try to remove it.\n          this._document.removeEventListener('mousemove', moveHandler);\n          moveHandler = null;\n        }\n        this._document.removeEventListener('mouseup', handler);\n        return this.cancel(ev);\n      };\n      this._document.addEventListener('mouseup', handler);\n\n      return this.cancel(ev);\n    }));\n\n    // if (this.normalMouse) {\n    //  on(this.document, 'mousemove', sendMove);\n    // }\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (!this.mouseEvents) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        if (!this.buffer.hasScrollback) {\n          const amount = this.viewport.getLinesScrolled(ev);\n\n          // Do nothing if there's no vertical scroll\n          if (amount === 0) {\n            return;\n          }\n\n          // Construct and send sequences\n          const sequence = C0.ESC + (this._coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + ( ev.deltaY < 0 ? 'A' : 'B');\n          let data = '';\n          for (let i = 0; i < Math.abs(amount); i++) {\n            data += sequence;\n          }\n          this._coreService.triggerDataEvent(data, true);\n        }\n        return;\n      }\n      if (this.x10Mouse || this._vt300Mouse || this._decLocator) return;\n      sendButton(ev);\n      ev.preventDefault();\n    }));\n\n    // allow wheel scrolling in\n    // the shell for example\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onWheel(ev);\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onTouchStart(ev);\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onTouchMove(ev);\n      return this.cancel(ev);\n    }));\n  }\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    if (this._renderService) {\n      this._renderService.refreshRows(start, end);\n    }\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    if (this.linkifier) {\n      this.linkifier.linkifyRows(start, end);\n    }\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService && this._selectionService.shouldColumnSelect(ev)) {\n      this.element.classList.add('column-select');\n    } else {\n      this.element.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  public showCursor(): void {\n    if (!this.cursorState) {\n      this.cursorState = 1;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(isWrapped: boolean = false): void {\n    let newLine: IBufferLine;\n    newLine = this._blankLine;\n    const eraseAttr = this.eraseAttrData();\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = this.buffer.getBlankLine(eraseAttr, isWrapped);\n      this._blankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = this.buffer.ybase + this.buffer.scrollTop;\n    const bottomRow = this.buffer.ybase + this.buffer.scrollBottom;\n\n    if (this.buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = this.buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === this.buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          this.buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          this.buffer.lines.push(newLine.clone());\n        }\n      } else {\n        this.buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        this.buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this._userScrolling) {\n          this.buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this._userScrolling) {\n          this.buffer.ydisp = Math.max(this.buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1/*as it's zero-based*/;\n      this.buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      this.buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this._userScrolling) {\n      this.buffer.ydisp = this.buffer.ybase;\n    }\n\n    // Flag rows that need updating\n    this.updateRange(this.buffer.scrollTop);\n    this.updateRange(this.buffer.scrollBottom);\n\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean): void {\n    if (disp < 0) {\n      if (this.buffer.ydisp === 0) {\n        return;\n      }\n      this._userScrolling = true;\n    } else if (disp + this.buffer.ydisp >= this.buffer.ybase) {\n      this._userScrolling = false;\n    }\n\n    const oldYdisp = this.buffer.ydisp;\n    this.buffer.ydisp = Math.max(Math.min(this.buffer.ydisp + disp, this.buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === this.buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(this.buffer.ydisp);\n    }\n\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /**\n   * Writes raw utf8 bytes to the terminal.\n   * @param data UintArray with UTF8 bytes to write to the terminal.\n   */\n  public writeUtf8(data: Uint8Array): void {\n    // Ensure the terminal isn't disposed\n    if (this._isDisposed) {\n      return;\n    }\n\n    // Ignore falsy data values\n    if (!data) {\n      return;\n    }\n\n    this.writeBufferUtf8.push(data);\n\n    // Send XOFF to pause the pty process if the write buffer becomes too large so\n    // xterm.js can catch up before more data is sent. This is necessary in order\n    // to keep signals such as ^C responsive.\n    if (this.options.useFlowControl && !this._xoffSentToCatchUp && this.writeBufferUtf8.length >= WRITE_BUFFER_PAUSE_THRESHOLD) {\n      // XOFF - stop pty pipe\n      // XON will be triggered by emulator before processing data chunk\n      this._coreService.triggerDataEvent(C0.DC3);\n      this._xoffSentToCatchUp = true;\n    }\n\n    if (!this._writeInProgress && this.writeBufferUtf8.length > 0) {\n      // Kick off a write which will write all data in sequence recursively\n      this._writeInProgress = true;\n      // Kick off an async innerWrite so more writes can come in while processing data\n      setTimeout(() => {\n        this._innerWriteUtf8();\n      });\n    }\n  }\n\n  protected _innerWriteUtf8(bufferOffset: number = 0): void {\n    // Ensure the terminal isn't disposed\n    if (this._isDisposed) {\n      this.writeBufferUtf8 = [];\n    }\n\n    const startTime = Date.now();\n    while (this.writeBufferUtf8.length > bufferOffset) {\n      const data = this.writeBufferUtf8[bufferOffset];\n      bufferOffset++;\n\n      // If XOFF was sent in order to catch up with the pty process, resume it if\n      // we reached the end of the writeBuffer to allow more data to come in.\n      if (this._xoffSentToCatchUp && this.writeBufferUtf8.length === bufferOffset) {\n        this._coreService.triggerDataEvent(C0.DC1);\n        this._xoffSentToCatchUp = false;\n      }\n\n      this._refreshStart = this.buffer.y;\n      this._refreshEnd = this.buffer.y;\n\n      // HACK: Set the parser state based on it's state at the time of return.\n      // This works around the bug #662 which saw the parser state reset in the\n      // middle of parsing escape sequence in two chunks. For some reason the\n      // state of the parser resets to 0 after exiting parser.parse. This change\n      // just sets the state back based on the correct return statement.\n\n      this._inputHandler.parseUtf8(data);\n\n      this.updateRange(this.buffer.y);\n      this.refresh(this._refreshStart, this._refreshEnd);\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this.writeBufferUtf8.length > bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this.writeBufferUtf8 = this.writeBufferUtf8.slice(bufferOffset);\n        bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWriteUtf8(bufferOffset), 0);\n    } else {\n      this._writeInProgress = false;\n      this.writeBufferUtf8 = [];\n    }\n  }\n\n  /**\n   * Writes text to the terminal.\n   * @param data The text to write to the terminal.\n   */\n  public write(data: string): void {\n    // Ensure the terminal isn't disposed\n    if (this._isDisposed) {\n      return;\n    }\n\n    // Ignore falsy data values (including the empty string)\n    if (!data) {\n      return;\n    }\n\n    this.writeBuffer.push(data);\n\n    // Send XOFF to pause the pty process if the write buffer becomes too large so\n    // xterm.js can catch up before more data is sent. This is necessary in order\n    // to keep signals such as ^C responsive.\n    if (this.options.useFlowControl && !this._xoffSentToCatchUp && this.writeBuffer.length >= WRITE_BUFFER_PAUSE_THRESHOLD) {\n      // XOFF - stop pty pipe\n      // XON will be triggered by emulator before processing data chunk\n      this._coreService.triggerDataEvent(C0.DC3);\n      this._xoffSentToCatchUp = true;\n    }\n\n    if (!this._writeInProgress && this.writeBuffer.length > 0) {\n      // Kick off a write which will write all data in sequence recursively\n      this._writeInProgress = true;\n      // Kick off an async innerWrite so more writes can come in while processing data\n      setTimeout(() => {\n        this._innerWrite();\n      });\n    }\n  }\n\n  protected _innerWrite(bufferOffset: number = 0): void {\n    // Ensure the terminal isn't disposed\n    if (this._isDisposed) {\n      this.writeBuffer = [];\n    }\n\n    const startTime = Date.now();\n    while (this.writeBuffer.length > bufferOffset) {\n      const data = this.writeBuffer[bufferOffset];\n      bufferOffset++;\n\n      // If XOFF was sent in order to catch up with the pty process, resume it if\n      // we reached the end of the writeBuffer to allow more data to come in.\n      if (this._xoffSentToCatchUp && this.writeBuffer.length === bufferOffset) {\n        this._coreService.triggerDataEvent(C0.DC1);\n        this._xoffSentToCatchUp = false;\n      }\n\n      this._refreshStart = this.buffer.y;\n      this._refreshEnd = this.buffer.y;\n\n      // HACK: Set the parser state based on it's state at the time of return.\n      // This works around the bug #662 which saw the parser state reset in the\n      // middle of parsing escape sequence in two chunks. For some reason the\n      // state of the parser resets to 0 after exiting parser.parse. This change\n      // just sets the state back based on the correct return statement.\n\n      this._inputHandler.parse(data);\n\n      this.updateRange(this.buffer.y);\n      this.refresh(this._refreshStart, this._refreshEnd);\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this.writeBuffer.length > bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this.writeBuffer = this.writeBuffer.slice(bufferOffset);\n        bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite(bufferOffset), 0);\n    } else {\n      this._writeInProgress = false;\n      this.writeBuffer = [];\n    }\n  }\n\n  /**\n   * Writes text to the terminal, followed by a break line character (\\n).\n   * @param data The text to write to the terminal.\n   */\n  public writeln(data: string): void {\n    this.write(data + '\\r\\n');\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public addCsiHandler(flag: string, callback: (params: IParams, collect: string) => boolean): IDisposable {\n    return this._inputHandler.addCsiHandler(flag, callback);\n  }\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._inputHandler.addOscHandler(ident, callback);\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    const joinerId = this._renderService.registerCharacterJoiner(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (this._renderService.deregisterCharacterJoiner(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart[0],\n      startRow: this._selectionService.selectionStart[1],\n      endColumn: this._selectionService.selectionEnd[0],\n      endRow: this._selectionService.selectionEnd[1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    if (this._selectionService) {\n      this._selectionService.clearSelection();\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    if (this._selectionService) {\n      this._selectionService.selectAll();\n    }\n  }\n\n  public selectLines(start: number, end: number): void {\n    if (this._selectionService) {\n      this._selectionService.selectLines(start, end);\n    }\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    const result = evaluateKeyboardEvent(event, this._coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    // if (result.key === C0.DC3) { // XOFF\n    //   this._writeStopped = true;\n    // } else if (result.key === C0.DC1) { // XON\n    //   this._writeStopped = false;\n    // }\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this.showCursor();\n    this._coreService.triggerDataEvent(result.key, true);\n\n    return this.cancel(event, true);\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: IKeyboardEvent): boolean {\n    const thirdLevelKey =\n        (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n        (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey);\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  /**\n   * Set the G level of the terminal\n   * @param g\n   */\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this.charsets[g];\n  }\n\n  /**\n   * Set the charset for the given G level of the terminal\n   * @param g\n   * @param charset\n   */\n  public setgCharset(g: number, charset: ICharset): void {\n    this.charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this.showCursor();\n    this._coreService.triggerDataEvent(key, true);\n\n    return true;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService.playBellSound();\n    }\n\n    if (this._visualBell()) {\n      this.element.classList.add('visual-bell-active');\n      clearTimeout(this._visualBellTimer);\n      this._visualBellTimer = window.setTimeout(() => {\n        this.element.classList.remove('visual-bell-active');\n      }, 200);\n    }\n  }\n\n  /**\n   * Log the current state to the console.\n   */\n  public log(text: string, data?: any): void {\n    if (!this.options.debug) return;\n    if (!this._context.console || !this._context.console.log) return;\n    this._context.console.log(text, data);\n  }\n\n  /**\n   * Log the current state as error to the console.\n   */\n  public error(text: string, data?: any): void {\n    if (!this.options.debug) return;\n    if (!this._context.console || !this._context.console.error) return;\n    this._context.console.error(text, data);\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    if (x < MINIMUM_COLS) x = MINIMUM_COLS;\n    if (y < MINIMUM_ROWS) y = MINIMUM_ROWS;\n\n    this.buffers.resize(x, y);\n\n    this._bufferService.resize(x, y);\n    this.buffers.setupTabStops(this.cols);\n\n    if (this._charSizeService) {\n      this._charSizeService.measure();\n    }\n\n    this.refresh(0, this.rows - 1);\n    this._onResize.fire({ cols: x, rows: y });\n  }\n\n  /**\n   * Updates the range of rows to refresh\n   * @param y The number of rows to refresh next.\n   */\n  public updateRange(y: number): void {\n    if (y < this._refreshStart) this._refreshStart = y;\n    if (y > this._refreshEnd) this._refreshEnd = y;\n    // if (y > this.refreshEnd) {\n    //   this.refreshEnd = y;\n    //   if (y > this.rows - 1) {\n    //     this.refreshEnd = this.rows - 1;\n    //   }\n    // }\n  }\n\n  /**\n   * Set the range of refreshing to the maximum value\n   */\n  public maxRange(): void {\n    this._refreshStart = 0;\n    this._refreshEnd = this.rows - 1;\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y));\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  public is(term: string): boolean {\n    return (this.options.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * Emit the data event and populate the given data.\n   * @param data The data to populate in the event.\n   */\n  // public handler(data: string): void {\n  //   // Prevents all events to pty process if stdin is disabled\n  //   if (this.options.disableStdin) {\n  //     return;\n  //   }\n\n  //   // Clear the selection if the selection manager is available and has an active selection\n  //   if (this.selectionService && this.selectionService.hasSelection) {\n  //     this.selectionService.clearSelection();\n  //   }\n\n  //   // Input is being sent to the terminal, the terminal should focus the prompt.\n  //   if (this.buffer.ybase !== this.buffer.ydisp) {\n  //     this.scrollToBottom();\n  //   }\n  //   this._onData.fire(data);\n  // }\n\n  /**\n   * Emit the 'title' event and populate the given title.\n   * @param title The title to populate in the event.\n   */\n  public handleTitle(title: string): void {\n    this._onTitleChange.fire(title);\n  }\n\n  /**\n   * ESC\n   */\n\n  /**\n   * ESC D Index (IND is 0x84).\n   */\n  public index(): void {\n    this.buffer.y++;\n    if (this.buffer.y > this.buffer.scrollBottom) {\n      this.buffer.y--;\n      this.scroll();\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this.buffer.x >= this.cols) {\n      this.buffer.x--;\n    }\n  }\n\n  /**\n   * ESC M Reverse Index (RI is 0x8d).\n   *\n   * Move the cursor up one row, inserting a new blank line if necessary.\n   */\n  public reverseIndex(): void {\n    if (this.buffer.y === this.buffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this.buffer.scrollBottom - this.buffer.scrollTop;\n      this.buffer.lines.shiftElements(this.buffer.y + this.buffer.ybase, scrollRegionHeight, 1);\n      this.buffer.lines.set(this.buffer.y + this.buffer.ybase, this.buffer.getBlankLine(this.eraseAttrData()));\n      this.updateRange(this.buffer.scrollTop);\n      this.updateRange(this.buffer.scrollBottom);\n    } else {\n      this.buffer.y--;\n    }\n  }\n\n  /**\n   * ESC c Full Reset (RIS).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n    const inputHandler = this._inputHandler;\n    const cursorState = this.cursorState;\n    const writeBuffer = this.writeBuffer;\n    const writeBufferUtf8 = this.writeBufferUtf8;\n    const writeInProgress = this._writeInProgress;\n    const xoffSentToCatchUp = this._xoffSentToCatchUp;\n    const userScrolling = this._userScrolling;\n\n    this._setup();\n    this._bufferService.reset();\n    this._coreService.reset();\n    if (this._selectionService) {\n      this._selectionService.reset();\n    }\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n    this._inputHandler = inputHandler;\n    this.cursorState = cursorState;\n    this.writeBuffer = writeBuffer;\n    this.writeBufferUtf8 = writeBufferUtf8;\n    this._writeInProgress = writeInProgress;\n    this._xoffSentToCatchUp = xoffSentToCatchUp;\n    this._userScrolling = userScrolling;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    if (this.viewport) {\n      this.viewport.syncScrollArea();\n    }\n  }\n\n\n  /**\n   * ESC H Tab Set (HTS is 0x88).\n   */\n  public tabSet(): void {\n    this.buffer.tabs[this.buffer.x] = true;\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from './Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Creates a new CompositionHelper.\n   * @param _textarea The textarea that xterm uses for input.\n   * @param _compositionView The element to display the in-progress composition in.\n   * @param _terminal The Terminal to forward the finished composition to.\n   */\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    private readonly _terminal: ITerminal,\n    private readonly _charSizeService: ICharSizeService,\n    private readonly _coreService: ICoreService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: null, end: null };\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: CompositionEvent): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      } else if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n    this._clearTextareaPosition();\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          this._coreService.triggerDataEvent(input, true);\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._terminal.buffer.isCursorInViewport) {\n      const cellHeight = Math.ceil(this._charSizeService.height * this._terminal.options.lineHeight);\n      const cursorTop = this._terminal.buffer.y * cellHeight;\n      const cursorLeft = this._terminal.buffer.x * this._charSizeService.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._terminal.options.fontFamily;\n      this._compositionView.style.fontSize = this._terminal.options.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      this._textarea.style.width = compositionViewBounds.width + 'px';\n      this._textarea.style.height = compositionViewBounds.height + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n\n  /**\n   * Clears the textarea's position so that the cursor does not blink on IE.\n   * @private\n   */\n  private _clearTextareaPosition(): void {\n    this._textarea.style.left = '';\n    this._textarea.style.top = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal, IViewport } from './Types';\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { ICharSizeService } from 'browser/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number;\n  private _lastScrollTop: number = 0;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private _terminal: ITerminal,\n    private _viewportElement: HTMLElement,\n    private _scrollArea: HTMLElement,\n    private _dimensions: IRenderDimensions,\n    private _charSizeService: ICharSizeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onDimensionsChance(dimensions: IRenderDimensions): void {\n    this._dimensions = dimensions;\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(): void {\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._terminal.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._terminal.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._terminal.buffer.lines.length;\n      this._refresh();\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._dimensions.canvasHeight) {\n      this._refresh();\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    const newScrollTop = this._terminal.buffer.ydisp * this._currentRowHeight;\n    if (this._lastScrollTop !== newScrollTop) {\n      this._refresh();\n      return;\n    }\n\n    // If element's scroll top changed, this can happen when hiding the element\n    if (this._lastScrollTop !== this._viewportElement.scrollTop) {\n      this._refresh();\n      return;\n    }\n\n    // If row height changed\n    if (this._dimensions.scaledCellHeight / window.devicePixelRatio !== this._currentRowHeight) {\n      this._refresh();\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._terminal.buffer.ydisp;\n    this._terminal.scrollLines(diff, true);\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): void {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return;\n    }\n    this._viewportElement.scrollTop += amount;\n    // Prevent the page from scrolling when the terminal scrolls\n    ev.preventDefault();\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = ev.deltaY;\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._terminal.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = ev.deltaY;\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._terminal.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): void {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    ev.preventDefault();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function pasteHandler(ev: ClipboardEvent, textarea: HTMLTextAreaElement, bracketedPasteMode: boolean, triggerUserInput: (data: string) => void): void {\n  ev.stopPropagation();\n\n  let text: string;\n\n  const dispatchPaste = function(text: string): void {\n    text = prepareTextForTerminal(text);\n    text = bracketTextForPaste(text, bracketedPasteMode);\n    triggerUserInput(text);\n    textarea.value = '';\n  };\n\n  if (ev.clipboardData) {\n    text = ev.clipboardData.getData('text/plain');\n    dispatchPaste(text);\n  }\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.position = 'absolute';\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n\n  // Reset the terminal textarea's styling\n  // Timeout needs to be long enough for click event to be handled.\n  setTimeout(() => {\n    textarea.style.position = null;\n    textarea.style.width = null;\n    textarea.style.height = null;\n    textarea.style.left = null;\n    textarea.style.top = null;\n    textarea.style.zIndex = null;\n  }, 200);\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord && !selectionService.isClickInSelection(ev)) {\n    selectionService.selectWordAtCursor(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IInputHandlingTerminal } from './Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { wcwidth } from 'common/CharWidth';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IAttributeData, IDisposable } from 'common/Types';\nimport { ICoreService } from 'common/services/Services';\nimport { ISelectionService } from 'browser/services/Services';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: {[key: string]: number} = {'(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2};\n\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(private _terminal: any) { }\n\n  hook(collect: string, params: IParams, flag: number): void {\n    this._data = new Uint32Array(0);\n  }\n\n  put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  unhook(): void {\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        return this._terminal.handler(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n      case '\"p': // DECSCL\n        return this._terminal.handler(`${C0.ESC}P1$r61\"p${C0.ESC}\\\\`);\n      case 'r': // DECSTBM\n        const pt = '' + (this._terminal.buffer.scrollTop + 1) +\n                ';' + (this._terminal.buffer.scrollBottom + 1) + 'r';\n        return this._terminal.handler(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        return this._terminal.handler(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n      case ' q': // DECSCUSR\n        const STYLES: {[key: string]: number} = {'block': 2, 'underline': 4, 'bar': 6};\n        let style = STYLES[this._terminal.getOption('cursorStyle')];\n        style -= this._terminal.getOption('cursorBlink');\n        return this._terminal.handler(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._terminal.error('Unknown DCS $q %s', data);\n        this._terminal.handler(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n\n  private _selectionService: ISelectionService | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  constructor(\n      protected _terminal: IInputHandlingTerminal,\n      private _coreService: ICoreService,\n      private _parser: IEscapeSequenceParser = new EscapeSequenceParser())\n  {\n    super();\n\n    this.register(this._parser);\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((collect: string, params: IParams, flag: number) => {\n      this._terminal.error('Unknown CSI code: ', { collect, params: params.toArray(), flag: String.fromCharCode(flag) });\n    });\n    this._parser.setEscHandlerFallback((collect: string, flag: number) => {\n      this._terminal.error('Unknown ESC code: ', { collect, flag: String.fromCharCode(flag) });\n    });\n    this._parser.setExecuteHandlerFallback((code: number) => {\n      this._terminal.error('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier: number, data: string) => {\n      this._terminal.error('Unknown OSC code: ', { identifier, data });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end): void => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.setCsiHandler('@', (params, collect) => this.insertChars(params));\n    this._parser.setCsiHandler('A', (params, collect) => this.cursorUp(params));\n    this._parser.setCsiHandler('B', (params, collect) => this.cursorDown(params));\n    this._parser.setCsiHandler('C', (params, collect) => this.cursorForward(params));\n    this._parser.setCsiHandler('D', (params, collect) => this.cursorBackward(params));\n    this._parser.setCsiHandler('E', (params, collect) => this.cursorNextLine(params));\n    this._parser.setCsiHandler('F', (params, collect) => this.cursorPrecedingLine(params));\n    this._parser.setCsiHandler('G', (params, collect) => this.cursorCharAbsolute(params));\n    this._parser.setCsiHandler('H', (params, collect) => this.cursorPosition(params));\n    this._parser.setCsiHandler('I', (params, collect) => this.cursorForwardTab(params));\n    this._parser.setCsiHandler('J', (params, collect) => this.eraseInDisplay(params));\n    this._parser.setCsiHandler('K', (params, collect) => this.eraseInLine(params));\n    this._parser.setCsiHandler('L', (params, collect) => this.insertLines(params));\n    this._parser.setCsiHandler('M', (params, collect) => this.deleteLines(params));\n    this._parser.setCsiHandler('P', (params, collect) => this.deleteChars(params));\n    this._parser.setCsiHandler('S', (params, collect) => this.scrollUp(params));\n    this._parser.setCsiHandler('T', (params, collect) => this.scrollDown(params, collect));\n    this._parser.setCsiHandler('X', (params, collect) => this.eraseChars(params));\n    this._parser.setCsiHandler('Z', (params, collect) => this.cursorBackwardTab(params));\n    this._parser.setCsiHandler('`', (params, collect) => this.charPosAbsolute(params));\n    this._parser.setCsiHandler('a', (params, collect) => this.hPositionRelative(params));\n    this._parser.setCsiHandler('b', (params, collect) => this.repeatPrecedingCharacter(params));\n    this._parser.setCsiHandler('c', (params, collect) => this.sendDeviceAttributes(params, collect));\n    this._parser.setCsiHandler('d', (params, collect) => this.linePosAbsolute(params));\n    this._parser.setCsiHandler('e', (params, collect) => this.vPositionRelative(params));\n    this._parser.setCsiHandler('f', (params, collect) => this.hVPosition(params));\n    this._parser.setCsiHandler('g', (params, collect) => this.tabClear(params));\n    this._parser.setCsiHandler('h', (params, collect) => this.setMode(params, collect));\n    this._parser.setCsiHandler('l', (params, collect) => this.resetMode(params, collect));\n    this._parser.setCsiHandler('m', (params, collect) => this.charAttributes(params));\n    this._parser.setCsiHandler('n', (params, collect) => this.deviceStatus(params, collect));\n    this._parser.setCsiHandler('p', (params, collect) => this.softReset(params, collect));\n    this._parser.setCsiHandler('q', (params, collect) => this.setCursorStyle(params, collect));\n    this._parser.setCsiHandler('r', (params, collect) => this.setScrollRegion(params, collect));\n    this._parser.setCsiHandler('s', (params, collect) => this.saveCursor(params));\n    this._parser.setCsiHandler('u', (params, collect) => this.restoreCursor(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    // some C1 control codes - FIXME: should those be enabled by default?\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.setOscHandler(0, (data) => this.setTitle(data));\n    //   1 - icon name\n    //   2 - title\n    this._parser.setOscHandler(2, (data) => this.setTitle(data));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    //  11 - Change VT100 text background color to Pt.\n    //  12 - Change text cursor color to Pt.\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    // 111 - Reset VT100 text background color.\n    // 112 - Reset text cursor color.\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.setEscHandler('7', () => this.saveCursor());\n    this._parser.setEscHandler('8', () => this.restoreCursor());\n    this._parser.setEscHandler('D', () => this.index());\n    this._parser.setEscHandler('E', () => this.nextLine());\n    this._parser.setEscHandler('H', () => this.tabSet());\n    this._parser.setEscHandler('M', () => this.reverseIndex());\n    this._parser.setEscHandler('=', () => this.keypadApplicationMode());\n    this._parser.setEscHandler('>', () => this.keypadNumericMode());\n    this._parser.setEscHandler('c', () => this.reset());\n    this._parser.setEscHandler('n', () => this.setgLevel(2));\n    this._parser.setEscHandler('o', () => this.setgLevel(3));\n    this._parser.setEscHandler('|', () => this.setgLevel(3));\n    this._parser.setEscHandler('}', () => this.setgLevel(2));\n    this._parser.setEscHandler('~', () => this.setgLevel(1));\n    this._parser.setEscHandler('%@', () => this.selectDefaultCharset());\n    this._parser.setEscHandler('%G', () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.setEscHandler('(' + flag, () => this.selectCharset('(' + flag));\n      this._parser.setEscHandler(')' + flag, () => this.selectCharset(')' + flag));\n      this._parser.setEscHandler('*' + flag, () => this.selectCharset('*' + flag));\n      this._parser.setEscHandler('+' + flag, () => this.selectCharset('+' + flag));\n      this._parser.setEscHandler('-' + flag, () => this.selectCharset('-' + flag));\n      this._parser.setEscHandler('.' + flag, () => this.selectCharset('.' + flag));\n      this._parser.setEscHandler('/' + flag, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._terminal.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.setDcsHandler('$q', new DECRQSS(this._terminal));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._terminal = null;\n  }\n\n  // TODO: When InputHandler moves into common, browser dependencies need to move out\n  public setBrowserServices(selectionService: ISelectionService): void {\n    this._selectionService = selectionService;\n  }\n\n  public parse(data: string): void {\n    // Ensure the terminal is not disposed\n    if (!this._terminal) {\n      return;\n    }\n\n    let buffer = this._terminal.buffer;\n    const cursorStartX = buffer.x;\n    const cursorStartY = buffer.y;\n\n    // TODO: Consolidate debug/logging #1560\n    if ((<any>this._terminal).debug) {\n      this._terminal.log('data: ' + data);\n    }\n\n    if (this._parseBuffer.length < data.length) {\n      this._parseBuffer = new Uint32Array(data.length);\n    }\n    this._parser.parse(this._parseBuffer, this._stringDecoder.decode(data, this._parseBuffer));\n\n    buffer = this._terminal.buffer;\n    if (buffer.x !== cursorStartX || buffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n  }\n\n  public parseUtf8(data: Uint8Array): void {\n    // Ensure the terminal is not disposed\n    if (!this._terminal) {\n      return;\n    }\n\n    let buffer = this._terminal.buffer;\n    const cursorStartX = buffer.x;\n    const cursorStartY = buffer.y;\n\n    // TODO: Consolidate debug/logging #1560\n    if ((<any>this._terminal).debug) {\n      this._terminal.log('data: ' + data);\n    }\n\n    if (this._parseBuffer.length < data.length) {\n      this._parseBuffer = new Uint32Array(data.length);\n    }\n    this._parser.parse(this._parseBuffer, this._utf8Decoder.decode(data, this._parseBuffer));\n\n    buffer = this._terminal.buffer;\n    if (buffer.x !== cursorStartX || buffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const buffer = this._terminal.buffer;\n    const charset = this._terminal.charset;\n    const screenReaderMode = this._terminal.options.screenReaderMode;\n    const cols = this._terminal.cols;\n    const wraparoundMode = this._terminal.wraparoundMode;\n    const insertMode = this._terminal.insertMode;\n    const curAttr = this._terminal.curAttrData;\n    let bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n\n    this._terminal.updateRange(buffer.y);\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._terminal.onA11yCharEmitter.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // FIXME: needs handling after cursor jumps\n      // buffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for buffer.x to avoid overflow left\n      if (!chWidth && buffer.x) {\n        if (!bufferRow.getWidth(buffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(buffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(buffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // TODO: needs a global min terminal width of 2\n      // FIXME: additionally ensure chWidth fits into a line\n      //   -->  maybe forbid cols<xy at higher level as it would\n      //        introduce a bad runtime penalty here\n      if (buffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          buffer.x = 0;\n          buffer.y++;\n          if (buffer.y > buffer.scrollBottom) {\n            buffer.y--;\n            this._terminal.scroll(true);\n          } else {\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            buffer.lines.get(buffer.y).isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n        } else {\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n          // FIXME: Do we have to set buffer.x to cols - 1, if not wrapping?\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(buffer.x, chWidth, buffer.getNullCell(curAttr));\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(buffer.x++, code, chWidth, curAttr.fg, curAttr.bg);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that buffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(buffer.x++, 0, 0, curAttr.fg, curAttr.bg);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end) {\n      bufferRow.loadCell(buffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n    this._terminal.updateRange(buffer.y);\n  }\n\n  /**\n   * Forward addCsiHandler from parser.\n   */\n  public addCsiHandler(flag: string, callback: (params: IParams, collect: string) => boolean): IDisposable {\n    return this._parser.addCsiHandler(flag, callback);\n  }\n\n  /**\n   * Forward addOscHandler from parser.\n   */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._parser.addOscHandler(ident, callback);\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   */\n  public bell(): void {\n    this._terminal.bell();\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   */\n  public lineFeed(): void {\n    // make buffer local for faster access\n    const buffer = this._terminal.buffer;\n\n    if (this._terminal.options.convertEol) {\n      buffer.x = 0;\n    }\n    buffer.y++;\n    if (buffer.y > buffer.scrollBottom) {\n      buffer.y--;\n      this._terminal.scroll();\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (buffer.x >= this._terminal.cols) {\n      buffer.x--;\n    }\n\n    this._onLineFeed.fire();\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   */\n  public carriageReturn(): void {\n    this._terminal.buffer.x = 0;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   */\n  public backspace(): void {\n    if (this._terminal.buffer.x > 0) {\n      this._terminal.buffer.x--;\n    }\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   */\n  public tab(): void {\n    const originalX = this._terminal.buffer.x;\n    this._terminal.buffer.x = this._terminal.buffer.nextStop();\n    if (this._terminal.options.screenReaderMode) {\n      this._terminal.onA11yTabEmitter.fire(this._terminal.buffer.x - originalX);\n    }\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   */\n  public shiftOut(): void {\n    this._terminal.setgLevel(1);\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   */\n  public shiftIn(): void {\n    this._terminal.setgLevel(0);\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   */\n  public insertChars(params: IParams): void {\n    this._terminal.buffer.lines.get(this._terminal.buffer.y + this._terminal.buffer.ybase).insertCells(\n      this._terminal.buffer.x,\n      params.params[0] || 1,\n      this._terminal.buffer.getNullCell(this._terminal.eraseAttrData())\n    );\n    this._terminal.updateRange(this._terminal.buffer.y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   */\n  public cursorUp(params: IParams): void {\n    const param = params.params[0] || 1;\n    this._terminal.buffer.y -= param;\n    if (this._terminal.buffer.y < 0) {\n      this._terminal.buffer.y = 0;\n    }\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   */\n  public cursorDown(params: IParams): void {\n    const param = params.params[0] || 1;\n    this._terminal.buffer.y += param;\n    if (this._terminal.buffer.y >= this._terminal.rows) {\n      this._terminal.buffer.y = this._terminal.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x--;\n    }\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   */\n  public cursorForward(params: IParams): void {\n    const param = params.params[0] || 1;\n    this._terminal.buffer.x += param;\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x = this._terminal.cols - 1;\n    }\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   */\n  public cursorBackward(params: IParams): void {\n    const param = params.params[0] || 1;\n\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x--;\n    }\n    this._terminal.buffer.x -= param;\n    if (this._terminal.buffer.x < 0) {\n      this._terminal.buffer.x = 0;\n    }\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * same as CSI Ps B ?\n   */\n  public cursorNextLine(params: IParams): void {\n    const param = params.params[0] || 1;\n    this._terminal.buffer.y += param;\n    if (this._terminal.buffer.y >= this._terminal.rows) {\n      this._terminal.buffer.y = this._terminal.rows - 1;\n    }\n    this._terminal.buffer.x = 0;\n  }\n\n\n  /**\n   * CSI Ps F\n   * Cursor Preceding Line Ps Times (default = 1) (CNL).\n   * reuse CSI Ps A ?\n   */\n  public cursorPrecedingLine(params: IParams): void {\n    const param = params.params[0] || 1;\n    this._terminal.buffer.y -= param;\n    if (this._terminal.buffer.y < 0) {\n      this._terminal.buffer.y = 0;\n    }\n    this._terminal.buffer.x = 0;\n  }\n\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   */\n  public cursorCharAbsolute(params: IParams): void {\n    const param = params.params[0] || 1;\n    this._terminal.buffer.x = param - 1;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   */\n  public cursorPosition(params: IParams): void {\n    let row: number = params.params[0] - 1;\n    let col: number = (params.length >= 2) ? params.params[1] - 1 : 0;\n\n    if (row < 0) {\n      row = 0;\n    } else if (row >= this._terminal.rows) {\n      row = this._terminal.rows - 1;\n    }\n\n    if (col < 0) {\n      col = 0;\n    } else if (col >= this._terminal.cols) {\n      col = this._terminal.cols - 1;\n    }\n\n    this._terminal.buffer.x = col;\n    this._terminal.buffer.y = row;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   */\n  public cursorForwardTab(params: IParams): void {\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._terminal.buffer.x = this._terminal.buffer.nextStop();\n    }\n  }\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._terminal.buffer.lines.get(this._terminal.buffer.ybase + y);\n    line.replaceCells(\n      start,\n      end,\n      this._terminal.buffer.getNullCell(this._terminal.eraseAttrData())\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    this._eraseInBufferLine(y, 0, this._terminal.cols, true);\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   */\n  public eraseInDisplay(params: IParams): void {\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._terminal.buffer.y;\n        this._terminal.updateRange(j);\n        this._eraseInBufferLine(j++, this._terminal.buffer.x, this._terminal.cols, this._terminal.buffer.x === 0);\n        for (; j < this._terminal.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._terminal.updateRange(j);\n        break;\n      case 1:\n        j = this._terminal.buffer.y;\n        this._terminal.updateRange(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._terminal.buffer.x + 1, true);\n        if (this._terminal.buffer.x + 1 >= this._terminal.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._terminal.buffer.lines.get(j + 1).isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._terminal.updateRange(0);\n        break;\n      case 2:\n        j = this._terminal.rows;\n        this._terminal.updateRange(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._terminal.updateRange(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._terminal.buffer.lines.length - this._terminal.rows;\n        if (scrollBackSize > 0) {\n          this._terminal.buffer.lines.trimStart(scrollBackSize);\n          this._terminal.buffer.ybase = Math.max(this._terminal.buffer.ybase - scrollBackSize, 0);\n          this._terminal.buffer.ydisp = Math.max(this._terminal.buffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   */\n  public eraseInLine(params: IParams): void {\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._terminal.buffer.y, this._terminal.buffer.x, this._terminal.cols);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._terminal.buffer.y, 0, this._terminal.buffer.x + 1);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._terminal.buffer.y, 0, this._terminal.cols);\n        break;\n    }\n    this._terminal.updateRange(this._terminal.buffer.y);\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   */\n  public insertLines(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._terminal.buffer;\n\n    const row: number = buffer.y + buffer.ybase;\n\n    const scrollBottomRowsOffset = this._terminal.rows - 1 - buffer.scrollBottom;\n    const scrollBottomAbsolute = this._terminal.rows - 1 + buffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      buffer.lines.splice(row, 0, buffer.getBlankLine(this._terminal.eraseAttrData()));\n    }\n\n    // this.maxRange();\n    this._terminal.updateRange(buffer.y);\n    this._terminal.updateRange(buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   */\n  public deleteLines(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._terminal.buffer;\n\n    const row: number = buffer.y + buffer.ybase;\n\n    let j: number;\n    j = this._terminal.rows - 1 - buffer.scrollBottom;\n    j = this._terminal.rows - 1 + buffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(row, 1);\n      buffer.lines.splice(j, 0, buffer.getBlankLine(this._terminal.eraseAttrData()));\n    }\n\n    // this.maxRange();\n    this._terminal.updateRange(buffer.y);\n    this._terminal.updateRange(buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   */\n  public deleteChars(params: IParams): void {\n    this._terminal.buffer.lines.get(this._terminal.buffer.y + this._terminal.buffer.ybase).deleteCells(\n      this._terminal.buffer.x,\n      params.params[0] || 1,\n      this._terminal.buffer.getNullCell(this._terminal.eraseAttrData())\n    );\n    this._terminal.updateRange(this._terminal.buffer.y);\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   */\n  public scrollUp(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._terminal.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 0, buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    // this.maxRange();\n    this._terminal.updateRange(buffer.scrollTop);\n    this._terminal.updateRange(buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   */\n  public scrollDown(params: IParams, collect?: string): void {\n    if (params.length < 2 && !collect) {\n      let param = params.params[0] || 1;\n\n      // make buffer local for faster access\n      const buffer = this._terminal.buffer;\n\n      while (param--) {\n        buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 1);\n        buffer.lines.splice(buffer.ybase + buffer.scrollTop, 0, buffer.getBlankLine(DEFAULT_ATTR_DATA));\n      }\n      // this.maxRange();\n      this._terminal.updateRange(buffer.scrollTop);\n      this._terminal.updateRange(buffer.scrollBottom);\n    }\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   */\n  public eraseChars(params: IParams): void {\n    this._terminal.buffer.lines.get(this._terminal.buffer.y + this._terminal.buffer.ybase).replaceCells(\n      this._terminal.buffer.x,\n      this._terminal.buffer.x + (params.params[0] || 1),\n      this._terminal.buffer.getNullCell(this._terminal.eraseAttrData())\n    );\n    this._terminal.updateRange(this._terminal.buffer.y);\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   */\n  public cursorBackwardTab(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._terminal.buffer;\n\n    while (param--) {\n      buffer.x = buffer.prevStop();\n    }\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   */\n  public charPosAbsolute(params: IParams): void {\n    const param = params.params[0] || 1;\n    this._terminal.buffer.x = param - 1;\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x = this._terminal.cols - 1;\n    }\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   * reuse CSI Ps C ?\n   */\n  public hPositionRelative(params: IParams): void {\n    const param = params.params[0] || 1;\n    this._terminal.buffer.x += param;\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x = this._terminal.cols - 1;\n    }\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   */\n  public repeatPrecedingCharacter(params: IParams): void {\n    if (!this._parser.precedingCodepoint) {\n      return;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   */\n  public sendDeviceAttributes(params: IParams, collect?: string): void {\n    if (params.params[0] > 0) {\n      return;\n    }\n\n    if (!collect) {\n      if (this._terminal.is('xterm') || this._terminal.is('rxvt-unicode') || this._terminal.is('screen')) {\n        this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n      } else if (this._terminal.is('linux')) {\n        this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n      }\n    } else if (collect === '>') {\n      // xterm and urxvt\n      // seem to spit this\n      // out around ~370 times (?).\n      if (this._terminal.is('xterm')) {\n        this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n      } else if (this._terminal.is('rxvt-unicode')) {\n        this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n      } else if (this._terminal.is('linux')) {\n        // not supported by linux console.\n        // linux console echoes parameters.\n        this._coreService.triggerDataEvent(params.params[0] + 'c');\n      } else if (this._terminal.is('screen')) {\n        this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n      }\n    }\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   */\n  public linePosAbsolute(params: IParams): void {\n    const param = params.params[0] || 1;\n    this._terminal.buffer.y = param - 1;\n    if (this._terminal.buffer.y >= this._terminal.rows) {\n      this._terminal.buffer.y = this._terminal.rows - 1;\n    }\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   */\n  public vPositionRelative(params: IParams): void {\n    const param = params.params[0] || 1;\n    this._terminal.buffer.y += param;\n    if (this._terminal.buffer.y >= this._terminal.rows) {\n      this._terminal.buffer.y = this._terminal.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x--;\n    }\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   */\n  public hVPosition(params: IParams): void {\n    const row = params.params[0] || 1;\n    const col = (params.length > 1) ? params.params[1] || 1 : 1;\n\n    this._terminal.buffer.y = row - 1;\n    if (this._terminal.buffer.y >= this._terminal.rows) {\n      this._terminal.buffer.y = this._terminal.rows - 1;\n    }\n\n    this._terminal.buffer.x = col - 1;\n    if (this._terminal.buffer.x >= this._terminal.cols) {\n      this._terminal.buffer.x = this._terminal.cols - 1;\n    }\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   */\n  public tabClear(params: IParams): void {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._terminal.buffer.tabs[this._terminal.buffer.x];\n    } else if (param === 3) {\n      this._terminal.buffer.tabs = {};\n    }\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   */\n  public setMode(params: IParams, collect?: string): void {\n    for (let i = 0; i < params.length; i++) {\n      this._setMode(params.params[i], collect);\n    }\n  }\n\n  private _setMode(param: number, collect?: string): void {\n    if (!collect) {\n      switch (param) {\n        case 4:\n          this._terminal.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    } else if (collect === '?') {\n      switch (param) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._terminal.setgCharset(0, DEFAULT_CHARSET);\n          this._terminal.setgCharset(1, DEFAULT_CHARSET);\n          this._terminal.setgCharset(2, DEFAULT_CHARSET);\n          this._terminal.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3: // 132 col mode\n          this._terminal.savedCols = this._terminal.cols;\n          this._terminal.resize(132, this._terminal.rows);\n          break;\n        case 6:\n          this._terminal.originMode = true;\n          break;\n        case 7:\n          this._terminal.wraparoundMode = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 66:\n          this._terminal.log('Serial port requested application keypad.');\n          this._terminal.applicationKeypad = true;\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n        case 1000: // vt200 mouse\n          // no motion.\n          // no modifiers, except control on the wheel.\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n\n          // TODO: Why are params[0] compares nested within a switch for params[0]?\n\n          this._terminal.x10Mouse = param === 9;\n          this._terminal.vt200Mouse = param === 1000;\n          this._terminal.normalMouse = param > 1000;\n          this._terminal.mouseEvents = true;\n          if (this._terminal.element) {\n            this._terminal.element.classList.add('enable-mouse-events');\n          }\n          if (this._selectionService) {\n            this._selectionService.disable();\n          }\n          this._terminal.log('Binding to mouse events.');\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._terminal.sendFocus = true;\n          break;\n        case 1005: // utf8 ext mode mouse\n          this._terminal.utfMouse = true;\n          // for wide terminals\n          // simply encodes large values as utf8 characters\n          break;\n        case 1006: // sgr ext mode mouse\n          this._terminal.sgrMouse = true;\n          // for wide terminals\n          // does not add 32 to fields\n          // press: ^[[<b;x;yM\n          // release: ^[[<b;x;ym\n          break;\n        case 1015: // urxvt ext mode mouse\n          this._terminal.urxvtMouse = true;\n          // for wide terminals\n          // numbers for fields\n          // press: ^[[b;x;yM\n          // motion: ^[[b;x;yT\n          break;\n        case 25: // show cursor\n          this._terminal.cursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n          // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._terminal.buffers.activateAltBuffer(this._terminal.eraseAttrData());\n          this._terminal.refresh(0, this._terminal.rows - 1);\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = true;\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   */\n  public resetMode(params: IParams, collect?: string): void {\n    for (let i = 0; i < params.length; i++) {\n      this._resetMode(params.params[i], collect);\n    }\n  }\n\n  private _resetMode(param: number, collect?: string): void {\n    if (!collect) {\n      switch (param) {\n        case 4:\n          this._terminal.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    } else if (collect === '?') {\n      switch (param) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          if (this._terminal.cols === 132 && this._terminal.savedCols) {\n            this._terminal.resize(this._terminal.savedCols, this._terminal.rows);\n          }\n          delete this._terminal.savedCols;\n          break;\n        case 6:\n          this._terminal.originMode = false;\n          break;\n        case 7:\n          this._terminal.wraparoundMode = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 66:\n          this._terminal.log('Switching back to normal keypad.');\n          this._terminal.applicationKeypad = false;\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._terminal.x10Mouse = false;\n          this._terminal.vt200Mouse = false;\n          this._terminal.normalMouse = false;\n          this._terminal.mouseEvents = false;\n          if (this._terminal.element) {\n            this._terminal.element.classList.remove('enable-mouse-events');\n          }\n          if (this._selectionService) {\n            this._selectionService.enable();\n          }\n          break;\n        case 1004: // send focusin/focusout events\n          this._terminal.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse\n          this._terminal.utfMouse = false;\n          break;\n        case 1006: // sgr ext mode mouse\n          this._terminal.sgrMouse = false;\n          break;\n        case 1015: // urxvt ext mode mouse\n          this._terminal.urxvtMouse = false;\n          break;\n        case 25: // hide cursor\n          this._terminal.cursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n           // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._terminal.buffers.activateNormalBuffer();\n          if (param === 1049) {\n            this.restoreCursor();\n          }\n          this._terminal.refresh(0, this._terminal.rows - 1);\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = false;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance);\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n          || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    if (accu[0] === 38) {\n      if (accu[1] === 2) {\n        attr.fg |= Attributes.CM_RGB;\n        attr.fg &= ~Attributes.RGB_MASK;\n        attr.fg |= AttributeData.fromColorRGB([accu[3], accu[4], accu[5]]);\n      } else if (accu[1] === 5) {\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P256 | (accu[3] & 0xff);\n      }\n    } else if (accu[0] === 48) {\n      if (accu[1] === 2) {\n        attr.bg |= Attributes.CM_RGB;\n        attr.bg &= ~Attributes.RGB_MASK;\n        attr.bg |= AttributeData.fromColorRGB([accu[3], accu[4], accu[5]]);\n      } else if (accu[1] === 5) {\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P256 | (accu[3] & 0xff);\n      }\n    }\n\n    return advance;\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *     Ps = 0  -> Normal (default).\n   *     Ps = 1  -> Bold.\n   *     Ps = 2  -> Faint, decreased intensity (ISO 6429).\n   *     Ps = 4  -> Underlined.\n   *     Ps = 5  -> Blink (appears as Bold).\n   *     Ps = 7  -> Inverse.\n   *     Ps = 8  -> Invisible, i.e., hidden (VT300).\n   *     Ps = 2 2  -> Normal (neither bold nor faint).\n   *     Ps = 2 4  -> Not underlined.\n   *     Ps = 2 5  -> Steady (not blinking).\n   *     Ps = 2 7  -> Positive (not inverse).\n   *     Ps = 2 8  -> Visible, i.e., not hidden (VT300).\n   *     Ps = 3 0  -> Set foreground color to Black.\n   *     Ps = 3 1  -> Set foreground color to Red.\n   *     Ps = 3 2  -> Set foreground color to Green.\n   *     Ps = 3 3  -> Set foreground color to Yellow.\n   *     Ps = 3 4  -> Set foreground color to Blue.\n   *     Ps = 3 5  -> Set foreground color to Magenta.\n   *     Ps = 3 6  -> Set foreground color to Cyan.\n   *     Ps = 3 7  -> Set foreground color to White.\n   *     Ps = 3 9  -> Set foreground color to default (original).\n   *     Ps = 4 0  -> Set background color to Black.\n   *     Ps = 4 1  -> Set background color to Red.\n   *     Ps = 4 2  -> Set background color to Green.\n   *     Ps = 4 3  -> Set background color to Yellow.\n   *     Ps = 4 4  -> Set background color to Blue.\n   *     Ps = 4 5  -> Set background color to Magenta.\n   *     Ps = 4 6  -> Set background color to Cyan.\n   *     Ps = 4 7  -> Set background color to White.\n   *     Ps = 4 9  -> Set background color to default (original).\n   *\n   *   If 16-color support is compiled, the following apply.  Assume\n   *   that xterm's resources are set so that the ISO color codes are\n   *   the first 8 of a set of 16.  Then the aixterm colors are the\n   *   bright versions of the ISO colors:\n   *     Ps = 9 0  -> Set foreground color to Black.\n   *     Ps = 9 1  -> Set foreground color to Red.\n   *     Ps = 9 2  -> Set foreground color to Green.\n   *     Ps = 9 3  -> Set foreground color to Yellow.\n   *     Ps = 9 4  -> Set foreground color to Blue.\n   *     Ps = 9 5  -> Set foreground color to Magenta.\n   *     Ps = 9 6  -> Set foreground color to Cyan.\n   *     Ps = 9 7  -> Set foreground color to White.\n   *     Ps = 1 0 0  -> Set background color to Black.\n   *     Ps = 1 0 1  -> Set background color to Red.\n   *     Ps = 1 0 2  -> Set background color to Green.\n   *     Ps = 1 0 3  -> Set background color to Yellow.\n   *     Ps = 1 0 4  -> Set background color to Blue.\n   *     Ps = 1 0 5  -> Set background color to Magenta.\n   *     Ps = 1 0 6  -> Set background color to Cyan.\n   *     Ps = 1 0 7  -> Set background color to White.\n   *\n   *   If xterm is compiled with the 16-color support disabled, it\n   *   supports the following, from rxvt:\n   *     Ps = 1 0 0  -> Set foreground and background color to\n   *     default.\n   *\n   *   If 88- or 256-color support is compiled, the following apply.\n   *     Ps = 3 8  ; 5  ; Ps -> Set foreground color to the second\n   *     Ps.\n   *     Ps = 4 8  ; 5  ; Ps -> Set background color to the second\n   *     Ps.\n   */\n  public charAttributes(params: IParams): void {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._terminal.curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._terminal.curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._terminal.curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 100) {\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._terminal.error('Unknown SGR attribute: %d.', p);\n      }\n    }\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   */\n  public deviceStatus(params: IParams, collect?: string): void {\n    if (!collect) {\n      switch (params.params[0]) {\n        case 5:\n          // status report\n          this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n          break;\n        case 6:\n          // cursor position\n          const y = this._terminal.buffer.y + 1;\n          const x = this._terminal.buffer.x + 1;\n          this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n          break;\n      }\n    } else if (collect === '?') {\n      // modern xterm doesnt seem to\n      // respond to any of these except ?6, 6, and 5\n      switch (params.params[0]) {\n        case 6:\n          // cursor position\n          const y = this._terminal.buffer.y + 1;\n          const x = this._terminal.buffer.x + 1;\n          this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n          break;\n        case 15:\n          // no printer\n          // this.handler(C0.ESC + '[?11n');\n          break;\n        case 25:\n          // dont support user defined keys\n          // this.handler(C0.ESC + '[?21n');\n          break;\n        case 26:\n          // north american keyboard\n          // this.handler(C0.ESC + '[?27;1;0;0n');\n          break;\n        case 53:\n          // no dec locator/mouse\n          // this.handler(C0.ESC + '[?50n');\n          break;\n      }\n    }\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   */\n  public softReset(params: IParams, collect?: string): void {\n    if (collect === '!') {\n      this._terminal.cursorHidden = false;\n      this._terminal.insertMode = false;\n      this._terminal.originMode = false;\n      this._terminal.wraparoundMode = true;  // defaults: xterm - true, vt100 - false\n      this._terminal.applicationKeypad = false; // ?\n      if (this._terminal.viewport) {\n        this._terminal.viewport.syncScrollArea();\n      }\n      this._coreService.decPrivateModes.applicationCursorKeys = false;\n      this._terminal.buffer.scrollTop = 0;\n      this._terminal.buffer.scrollBottom = this._terminal.rows - 1;\n      this._terminal.curAttrData = DEFAULT_ATTR_DATA.clone();\n      this._terminal.buffer.x = this._terminal.buffer.y = 0; // ?\n      this._terminal.charset = null;\n      this._terminal.glevel = 0; // ??\n      this._terminal.charsets = [null]; // ??\n    }\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   */\n  public setCursorStyle(params?: IParams, collect?: string): void {\n    if (collect === ' ') {\n      const param = params.params[0] || 1;\n      switch (param) {\n        case 1:\n        case 2:\n          this._terminal.options.cursorStyle = 'block';\n          break;\n        case 3:\n        case 4:\n          this._terminal.options.cursorStyle = 'underline';\n          break;\n        case 5:\n        case 6:\n          this._terminal.options.cursorStyle = 'bar';\n          break;\n      }\n      const isBlinking = param % 2 === 1;\n      this._terminal.options.cursorBlink = isBlinking;\n    }\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   * CSI ? Pm r\n   *   currently skipped\n   */\n  public setScrollRegion(params: IParams, collect?: string): void {\n    if (collect) {\n      return;\n    }\n    this._terminal.buffer.scrollTop = (params.params[0] || 1) - 1;\n    this._terminal.buffer.scrollBottom = (params.length > 1 && params.params[1] && params.params[1] <= this._terminal.rows ? params.params[1] : this._terminal.rows) - 1;\n    this._terminal.buffer.x = 0;\n    this._terminal.buffer.y = 0;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   */\n  public saveCursor(params?: IParams): void {\n    this._terminal.buffer.savedX = this._terminal.buffer.x;\n    this._terminal.buffer.savedY = this._terminal.buffer.ybase + this._terminal.buffer.y;\n    this._terminal.buffer.savedCurAttrData.fg = this._terminal.curAttrData.fg;\n    this._terminal.buffer.savedCurAttrData.bg = this._terminal.curAttrData.bg;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   */\n  public restoreCursor(params?: IParams): void {\n    this._terminal.buffer.x = this._terminal.buffer.savedX || 0;\n    this._terminal.buffer.y = Math.max(this._terminal.buffer.savedY - this._terminal.buffer.ybase, 0);\n    this._terminal.curAttrData.fg = this._terminal.buffer.savedCurAttrData.fg;\n    this._terminal.curAttrData.bg = this._terminal.buffer.savedCurAttrData.bg;\n  }\n\n\n  /**\n   * OSC 0; <data> ST (set icon name + window title)\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title. Icon name is not supported.\n   */\n  public setTitle(data: string): void {\n    this._terminal.handleTitle(data);\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   */\n  public nextLine(): void {\n    this._terminal.buffer.x = 0;\n    this.index();\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): void {\n    this._terminal.log('Serial port requested application keypad.');\n    this._terminal.applicationKeypad = true;\n    if (this._terminal.viewport) {\n      this._terminal.viewport.syncScrollArea();\n    }\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): void {\n    this._terminal.log('Switching back to normal keypad.');\n    this._terminal.applicationKeypad = false;\n    if (this._terminal.viewport) {\n      this._terminal.viewport.syncScrollArea();\n    }\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): void {\n    this._terminal.setgLevel(0);\n    this._terminal.setgCharset(0, DEFAULT_CHARSET); // US (default)\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): void {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return;\n    }\n    if (collectAndFlag[0] === '/') {\n      return;  // TODO: Is this supported?\n    }\n    this._terminal.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   */\n  public index(): void {\n    this._terminal.index();  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   */\n  public tabSet(): void {\n    this._terminal.tabSet();  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   */\n  public reverseIndex(): void {\n    this._terminal.reverseIndex();  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public reset(): void {\n    this._parser.reset();\n    this._terminal.reset();  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): void {\n    this._terminal.setgLevel(level);  // TODO: save to move from terminal?\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | null } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | null = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u0009', // '\\t'\n  'c': '\\u000c', // '\\f'\n  'd': '\\u000d', // '\\r'\n  'e': '\\u000a', // '\\n'\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '\\u2424' (NL)\n  'i': '\\u000b', // '\\v'\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = null;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\n\ninterface IHandlerCollection<T> {\n  [key: string]: T[];\n}\n\ntype CsiHandler = (params: IParams, collect: string) => boolean | void;\ntype OscHandler = (data: string) => boolean | void;\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number) => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n/**\n * Dummy DCS handler as default fallback.\n */\nclass DcsDummy implements IDcsHandler {\n  hook(collect: string, params: IParams, flag: number): void { }\n  put(data: Uint32Array, start: number, end: number): void { }\n  unhook(): void { }\n}\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` contructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _osc: string;\n  protected _params: Params;\n  protected _collect: string;\n\n  // handler lookup containers\n  protected _printHandler: (data: Uint32Array, start: number, end: number) => void;\n  protected _executeHandlers: any;\n  protected _csiHandlers: IHandlerCollection<CsiHandler>;\n  protected _escHandlers: any;\n  protected _oscHandlers: IHandlerCollection<OscHandler>;\n  protected _dcsHandlers: any;\n  protected _activeDcsHandler: IDcsHandler | null;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: (data: Uint32Array, start: number, end: number) => void;\n  protected _executeHandlerFb: (code: number) => void;\n  protected _csiHandlerFb: (collect: string, params: IParams, flag: number) => void;\n  protected _escHandlerFb: (collect: string, flag: number) => void;\n  protected _oscHandlerFb: (identifier: number, data: string) => void;\n  protected _dcsHandlerFb: IDcsHandler;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  constructor(readonly TRANSITIONS: TransitionTable = VT500_TRANSITION_TABLE) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._osc = '';\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = '';\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (collect: string, params: IParams, flag: number): void => { };\n    this._escHandlerFb = (collect: string, flag: number): void => { };\n    this._oscHandlerFb = (identifier: number, data: string): void => { };\n    this._dcsHandlerFb = new DcsDummy();\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscHandlers = Object.create(null);\n    this._dcsHandlers = Object.create(null);\n    this._activeDcsHandler = null;\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.setEscHandler('\\\\', () => {});\n  }\n\n  public dispose(): void {\n    this._executeHandlers = null;\n    this._escHandlers = null;\n    this._dcsHandlers = null;\n    this._activeDcsHandler = null;\n  }\n\n  setPrintHandler(callback: (data: Uint32Array, start: number, end: number) => void): void {\n    this._printHandler = callback;\n  }\n  clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  setExecuteHandler(flag: string, callback: () => void): void {\n    this._executeHandlers[flag.charCodeAt(0)] = callback;\n  }\n  clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  setExecuteHandlerFallback(callback: (code: number) => void): void {\n    this._executeHandlerFb = callback;\n  }\n\n  addCsiHandler(flag: string, callback: CsiHandler): IDisposable {\n    const index = flag.charCodeAt(0);\n    if (this._csiHandlers[index] === undefined) {\n      this._csiHandlers[index] = [];\n    }\n    const handlerList = this._csiHandlers[index];\n    handlerList.push(callback);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(callback);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  setCsiHandler(flag: string, callback: (params: IParams, collect: string) => void): void {\n    this._csiHandlers[flag.charCodeAt(0)] = [callback];\n  }\n  clearCsiHandler(flag: string): void {\n    if (this._csiHandlers[flag.charCodeAt(0)]) delete this._csiHandlers[flag.charCodeAt(0)];\n  }\n  setCsiHandlerFallback(callback: (collect: string, params: IParams, flag: number) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  setEscHandler(collectAndFlag: string, callback: () => void): void {\n    this._escHandlers[collectAndFlag] = callback;\n  }\n  clearEscHandler(collectAndFlag: string): void {\n    if (this._escHandlers[collectAndFlag]) delete this._escHandlers[collectAndFlag];\n  }\n  setEscHandlerFallback(callback: (collect: string, flag: number) => void): void {\n    this._escHandlerFb = callback;\n  }\n\n  addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    if (this._oscHandlers[ident] === undefined) {\n      this._oscHandlers[ident] = [];\n    }\n    const handlerList = this._oscHandlers[ident];\n    handlerList.push(callback);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(callback);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  setOscHandler(ident: number, callback: (data: string) => void): void {\n    this._oscHandlers[ident] = [callback];\n  }\n  clearOscHandler(ident: number): void {\n    if (this._oscHandlers[ident]) delete this._oscHandlers[ident];\n  }\n  setOscHandlerFallback(callback: (identifier: number, data: string) => void): void {\n    this._oscHandlerFb = callback;\n  }\n\n  setDcsHandler(collectAndFlag: string, handler: IDcsHandler): void {\n    this._dcsHandlers[collectAndFlag] = handler;\n  }\n  clearDcsHandler(collectAndFlag: string): void {\n    if (this._dcsHandlers[collectAndFlag]) delete this._dcsHandlers[collectAndFlag];\n  }\n  setDcsHandlerFallback(handler: IDcsHandler): void {\n    this._dcsHandlerFb = handler;\n  }\n\n  setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  reset(): void {\n    this.currentState = this.initialState;\n    this._osc = '';\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = '';\n    this._activeDcsHandler = null;\n    this.precedingCodepoint = 0;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   */\n  parse(data: Uint32Array, length: number): void {\n    let code = 0;\n    let transition = 0;\n    let currentState = this.currentState;\n    let osc = this._osc;\n    let collect = this._collect;\n    const params = this._params;\n    const table: Uint8Array = this.TRANSITIONS.table;\n    let dcsHandler: IDcsHandler | null = this._activeDcsHandler;\n    let callback: Function | null = null;\n\n    // process input string\n    for (let i = 0; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = table[currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          this.precedingCodepoint = 0;\n          callback = this._executeHandlers[code];\n          if (callback) callback();\n          else this._executeHandlerFb(code);\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState,\n              osc,\n              collect,\n              params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // dont reset preceding codepoint for REP itself\n          if (code !== 98) { // 'b'\n            this.precedingCodepoint = 0;\n          }\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // undefined or true means success and to stop bubbling\n            if (handlers[j](params, collect) !== false) {\n              break;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(collect, params, code);\n          }\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          let isSub = false;\n          do {\n            switch (code) {\n              case 0x3b:\n                params.addParam(0);  // ZDM\n                isSub = false;\n                break;\n              case 0x3a:\n                params.addSubParam(-1);\n                isSub = true;\n                break;\n              default:  // 0x30 - 0x39\n                if (isSub) params.addSubParamDigit(code - 48);\n                else params.addParamDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          collect += String.fromCharCode(code);\n          break;\n        case ParserAction.ESC_DISPATCH:\n          this.precedingCodepoint = 0;\n          callback = this._escHandlers[collect + String.fromCharCode(code)];\n          if (callback) callback(collect, code);\n          else this._escHandlerFb(collect, code);\n          break;\n        case ParserAction.CLEAR:\n          osc = '';\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = '';\n          break;\n        case ParserAction.DCS_HOOK:\n          this.precedingCodepoint = 0;\n          dcsHandler = this._dcsHandlers[collect + String.fromCharCode(code)];\n          if (!dcsHandler) dcsHandler = this._dcsHandlerFb;\n          dcsHandler.hook(collect, params, code);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              if (dcsHandler) {\n                dcsHandler.put(data, i, j);\n              }\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          if (dcsHandler) {\n            dcsHandler.unhook();\n            dcsHandler = null;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          osc = '';\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = '';\n          break;\n        case ParserAction.OSC_START:\n          osc = '';\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code <= 0x9f)) {\n              osc += utf32ToString(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          this.precedingCodepoint = 0;\n          if (osc && code !== 0x18 && code !== 0x1a) {\n            // NOTE: OSC subparsing is not part of the original parser\n            // we do basic identifier parsing here to offer a jump table for OSC as well\n            const idx = osc.indexOf(';');\n            if (idx === -1) {\n              this._oscHandlerFb(-1, osc);  // this is an error (malformed OSC)\n            } else {\n              // Note: NaN is not handled here\n              // either catch it with the fallback handler\n              // or with an explicit NaN OSC handler\n              const identifier = parseInt(osc.substring(0, idx));\n              const content = osc.substring(idx + 1);\n              // Trigger OSC Handler\n              const handlers = this._oscHandlers[identifier];\n              let j = handlers ? handlers.length - 1 : -1;\n              for (; j >= 0; j--) {\n                // undefined or true means success and to stop bubbling\n                if (handlers[j](content) !== false) {\n                  break;\n                }\n              }\n              if (j < 0) {\n                this._oscHandlerFb(identifier, content);\n              }\n            }\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          osc = '';\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = '';\n          break;\n      }\n      currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n\n    // save non pushable buffers\n    this._osc = osc;\n    this._collect = collect;\n    this._params = params;\n\n    // save active dcs handler reference\n    this._activeDcsHandler = dcsHandler;\n\n    // save state\n    this.currentState = currentState;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (values[0] instanceof Array) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (value instanceof Array) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    if (!this.length) {\n      return;\n    }\n    if (this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   * Do not use this method directly, consider using `addParam` instead.\n   */\n  public addParamDigit(value: number): void {\n    if (this._rejectDigits) {\n      return;\n    }\n    const v = this.params[this.length - 1] * 10 + value;\n    this.params[this.length - 1] = v > MAX_VALUE ? MAX_VALUE : v;\n  }\n\n  /**\n   * Add a single digit value to current sub parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   * Do not use this method directly, consider using `addSubParam` instead.\n   */\n  public addSubParamDigit(value: number): void {\n    if (!this._subParamsLength || this._rejectDigits || this._rejectSubDigits) {\n      return;\n    }\n    if (this._subParams[this._subParamsLength - 1] === -1) {\n      this._subParams[this._subParamsLength - 1] = value;\n    } else {\n      const v = this._subParams[this._subParamsLength - 1] * 10 + value;\n      this._subParams[this._subParamsLength - 1] = v > MAX_VALUE ? MAX_VALUE : v;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from './TextRenderLayer';\nimport { SelectionRenderLayer } from './SelectionRenderLayer';\nimport { CursorRenderLayer } from './CursorRenderLayer';\nimport { IRenderLayer } from './Types';\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler, ICharacterJoinerRegistry } from 'browser/renderer/Types';\nimport { ITerminal } from '../Types';\nimport { LinkRenderLayer } from './LinkRenderLayer';\nimport { CharacterJoinerRegistry } from 'browser/renderer/CharacterJoinerRegistry';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n\n  public dimensions: IRenderDimensions;\n\n  constructor(\n    private _terminal: ITerminal,\n    private _colors: IColorSet,\n    private _charSizeService: ICharSizeService\n  ) {\n    super();\n    const allowTransparency = this._terminal.options.allowTransparency;\n    this._characterJoinerRegistry = new CharacterJoinerRegistry(_terminal);\n\n    this._renderLayers = [\n      new TextRenderLayer(this._terminal.screenElement, 0, this._colors, this._characterJoinerRegistry, allowTransparency),\n      new SelectionRenderLayer(this._terminal.screenElement, 1, this._colors),\n      new LinkRenderLayer(this._terminal.screenElement, 2, this._colors, this._terminal),\n      new CursorRenderLayer(this._terminal.screenElement, 3, this._colors)\n    ];\n    this.dimensions = {\n      scaledCharWidth: null,\n      scaledCharHeight: null,\n      scaledCellWidth: null,\n      scaledCellHeight: null,\n      scaledCharLeft: null,\n      scaledCharTop: null,\n      scaledCanvasWidth: null,\n      scaledCanvasHeight: null,\n      canvasWidth: null,\n      canvasHeight: null,\n      actualCellWidth: null,\n      actualCellHeight: null\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._renderLayers.forEach(l => l.dispose());\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._terminal.cols, this._terminal.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n\n    // Clear layers and force a full render\n    this._renderLayers.forEach(l => {\n      l.setColors(this._terminal, this._colors);\n      l.reset(this._terminal);\n    });\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    this._renderLayers.forEach(l => l.resize(this._terminal, this.dimensions));\n\n    // Resize the screen\n    this._terminal.screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._terminal.screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._terminal.cols, this._terminal.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur(this._terminal));\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus(this._terminal));\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(this._terminal, start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove(this._terminal));\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged(this._terminal));\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset(this._terminal));\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    this._renderLayers.forEach(l => operation(l));\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    this._renderLayers.forEach(l => l.onGridChanged(this._terminal, start, end));\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._terminal.options.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._terminal.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._terminal.options.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._terminal.options.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._terminal.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._terminal.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._terminal.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._terminal.cols;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._characterJoinerRegistry.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._characterJoinerRegistry.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharacterJoinerRegistry, IRenderDimensions } from 'browser/renderer/Types';\nimport { ITerminal } from '../Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { JoinedCellData } from 'browser/renderer/CharacterJoinerRegistry';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number;\n  private _characterFont: string;\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n  private _workCell = new CellData();\n\n  constructor(container: HTMLElement, zIndex: number, colors: IColorSet, characterJoinerRegistry: ICharacterJoinerRegistry, alpha: boolean) {\n    super(container, 'text', zIndex, alpha, colors);\n    this._state = new GridCache<CharData>();\n    this._characterJoinerRegistry = characterJoinerRegistry;\n  }\n\n  public resize(terminal: ITerminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(terminal, false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(terminal.cols, terminal.rows);\n  }\n\n  public reset(terminal: ITerminal): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    terminal: ITerminal,\n    firstRow: number,\n    lastRow: number,\n    joinerRegistry: ICharacterJoinerRegistry | null,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + terminal.buffer.ydisp;\n      const line = terminal.buffer.lines.get(row);\n      const joinedRanges = joinerRegistry ? joinerRegistry.getJoinedCharacters(row) : [];\n      for (let x = 0; x < terminal.cols; x++) {\n        line.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift();\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n\n          cell = new JoinedCellData(\n            this._workCell,\n            line.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line.length - 1 && line.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(terminal: ITerminal, firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = terminal.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(terminal, firstRow, lastRow, null, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      } if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle;\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle;\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(terminal: ITerminal, firstRow: number, lastRow: number): void {\n    this._forEachCell(terminal, firstRow, lastRow, this._characterJoinerRegistry, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(terminal, cell, x, y);\n      if (cell.isUnderline()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            this._ctx.fillStyle = this._colors.ansi[cell.getBgColor()].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (terminal.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        this._fillBottomLineAtCells(x, y, cell.getWidth());\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(terminal: ITerminal, firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, terminal.cols, lastRow - firstRow + 1);\n    this._drawBackground(terminal, firstRow, lastRow);\n    this._drawForeground(terminal, firstRow, lastRow);\n  }\n\n  public onOptionsChanged(terminal: ITerminal): void {\n    this._setTransparency(terminal, terminal.options.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier, ICharAtlasConfig } from './Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from './BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = this._cacheCanvas.getContext('2d', {alpha: true});\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = tmpCanvas.getContext('2d', {alpha: this._config.allowTransparency});\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    } else if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek().index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    } else if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    } else if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.background;\n    } else if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = 'middle';\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight / 2);\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from './Types';\nimport { IDisposable } from 'xterm';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  protected _doWarmUp(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from '../Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\n\ninterface ISelectionState {\n  start: [number, number];\n  end: [number, number];\n  columnSelectMode: boolean;\n  ydisp: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state: ISelectionState;\n\n  constructor(container: HTMLElement, zIndex: number, colors: IColorSet) {\n    super(container, 'selection', zIndex, true, colors);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: null,\n      end: null,\n      columnSelectMode: null,\n      ydisp: null\n    };\n  }\n\n  public resize(terminal: ITerminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(terminal: ITerminal): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(terminal: ITerminal, start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, terminal.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - terminal.buffer.ydisp;\n    const viewportEndRow = end[1] - terminal.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= terminal.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selection.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : terminal.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, terminal.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : terminal.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = terminal.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number], end: [number, number], columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number], coord2: [number, number]): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { ITerminal } from '../Types';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (terminal: ITerminal, x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager;\n  private _cell: ICellData = new CellData();\n\n  constructor(container: HTMLElement, zIndex: number, colors: IColorSet) {\n    super(container, 'cursor', zIndex, true, colors);\n    this._state = {\n      x: null,\n      y: null,\n      isFocused: null,\n      style: null,\n      width: null\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    // TODO: Consider initial options? Maybe onOptionsChanged should be called at the end of open?\n  }\n\n  public resize(terminal: ITerminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: null,\n      y: null,\n      isFocused: null,\n      style: null,\n      width: null\n    };\n  }\n\n  public reset(terminal: ITerminal): void {\n    this._clearCursor();\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = null;\n      this.onOptionsChanged(terminal);\n    }\n  }\n\n  public onBlur(terminal: ITerminal): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.pause();\n    }\n    terminal.refresh(terminal.buffer.y, terminal.buffer.y);\n  }\n\n  public onFocus(terminal: ITerminal): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.resume(terminal);\n    } else {\n      terminal.refresh(terminal.buffer.y, terminal.buffer.y);\n    }\n  }\n\n  public onOptionsChanged(terminal: ITerminal): void {\n    if (terminal.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(terminal, () => {\n          this._render(terminal, true);\n        });\n      }\n    } else {\n      if (this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager.dispose();\n        this._cursorBlinkStateManager = null;\n      }\n      // Request a refresh from the terminal as management of rendering is being\n      // moved back to the terminal\n      terminal.refresh(terminal.buffer.y, terminal.buffer.y);\n    }\n  }\n\n  public onCursorMove(terminal: ITerminal): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.restartBlinkAnimation(terminal);\n    }\n  }\n\n  public onGridChanged(terminal: ITerminal, startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(terminal, false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation(terminal);\n    }\n  }\n\n  private _render(terminal: ITerminal, triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!terminal.cursorState || terminal.cursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = terminal.buffer.ybase + terminal.buffer.y;\n    const viewportRelativeCursorY = cursorY - terminal.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= terminal.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    terminal.buffer.lines.get(cursorY).loadCell(terminal.buffer.x, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!terminal.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      this._renderBlurCursor(terminal, terminal.buffer.x, viewportRelativeCursorY, this._cell);\n      this._ctx.restore();\n      this._state.x = terminal.buffer.x;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = terminal.options.cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === terminal.buffer.x &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === terminal.isFocused &&\n          this._state.style === terminal.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[terminal.options.cursorStyle || 'block'](terminal, terminal.buffer.x, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = terminal.buffer.x;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = terminal.options.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      this._state = {\n        x: null,\n        y: null,\n        isFocused: null,\n        style: null,\n        width: null\n      };\n    }\n  }\n\n  private _renderBarCursor(terminal: ITerminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(terminal: ITerminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(terminal, cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(terminal: ITerminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(terminal: ITerminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number;\n  private _blinkStartTimeout: number;\n  private _blinkInterval: number;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number;\n\n  constructor(\n    terminal: ITerminal,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (terminal.isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = null;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = null;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = null;\n    }\n  }\n\n  public restartBlinkAnimation(terminal: ITerminal): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = null;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = <number><any>setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = null;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = null;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = <number><any>setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = null;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = null;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = null;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = null;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = null;\n    }\n  }\n\n  public resume(terminal: ITerminal): void {\n    this._animationTimeRestarted = null;\n    this._restartInterval();\n    this.restartBlinkAnimation(terminal);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ITerminal, ILinkifierAccessor } from '../Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from './atlas/CharAtlasUtils';\nimport { IColorSet } from 'browser/Types';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent = null;\n\n  constructor(container: HTMLElement, zIndex: number, colors: IColorSet, terminal: ILinkifierAccessor) {\n    super(container, 'link', zIndex, true, colors);\n    terminal.linkifier.onLinkHover(e => this._onLinkHover(e));\n    terminal.linkifier.onLinkLeave(e => this._onLinkLeave(e));\n  }\n\n  public resize(terminal: ITerminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = null;\n  }\n\n  public reset(terminal: ITerminal): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = null;\n    }\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, ITerminal, IMouseZoneManager } from './Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { MouseZone } from './MouseZoneManager';\nimport { getStringCellWidth } from 'common/CharWidth';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: ILinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager;\n  private _rowsTimeoutId: number;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number, end: number };\n\n  private _onLinkHover = new EventEmitter<ILinkifierEvent>();\n  public get onLinkHover(): IEvent<ILinkifierEvent> { return this._onLinkHover.event; }\n  private _onLinkLeave = new EventEmitter<ILinkifierEvent>();\n  public get onLinkLeave(): IEvent<ILinkifierEvent> { return this._onLinkLeave.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    protected _terminal: ITerminal\n  ) {\n    this._rowsToLinkify = {\n      start: null,\n      end: null\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(mouseZoneManager: IMouseZoneManager): void {\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === null) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n    this._rowsTimeoutId = <number><any>setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency);\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = null;\n    const buffer = this._terminal.buffer;\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._terminal.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._terminal.cols);\n    const iterator = this._terminal.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = null;\n    this._rowsToLinkify.end = null;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: ILinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: ILinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, matcher.regex.flags + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        // DEBUG: print match and throw\n        if ((<any>this._terminal).debug) {\n          console.log({match, matcher});\n          throw new Error('match found without corresponding matchIndex');\n        }\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._terminal.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._terminal.buffer.lines.get(bufferIndex[0]);\n      const attr = line.getFg(bufferIndex[1]);\n      let fg: number | undefined;\n      if (attr) {\n        fg = (attr >> 9) & 0x1ff;\n      }\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._terminal.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._terminal.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number): void {\n    const width = getStringCellWidth(uri);\n    const x1 = x % this._terminal.cols;\n    const y1 = y + Math.floor(x / this._terminal.cols);\n    let x2 = (x1 + width) % this._terminal.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._terminal.cols);\n    if (x2 === 0) {\n      x2 = this._terminal.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        window.open(uri, '_blank');\n      },\n      () => {\n        this._onLinkHover.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._terminal.element.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          matcher.hoverTooltipCallback(e, uri);\n        }\n      },\n      () => {\n        this._onLinkLeave.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._terminal.element.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._terminal.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICharSizeService, IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService implements ISelectionService {\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n\n  private _onLinuxMouseSelection = new EventEmitter<string>();\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = new EventEmitter<ISelectionRedrawRequestEvent>();\n  public get onRedrawRequest(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n\n  constructor(\n    private readonly _scrollLines: (amount: number, suppressEvent: boolean) => void,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _charSizeService: ICharSizeService,\n    private readonly _bufferService: IBufferService,\n    private readonly _coreService: ICoreService,\n    private readonly _mouseService: IMouseService,\n    private readonly _optionsService: IOptionsService\n  ) {\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(<MouseEvent>event);\n    this._mouseUpListener = event => this._onMouseUp(<MouseEvent>event);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  public isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  public selectWordAtCursor(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, false);\n      this._model.selectionEnd = undefined;\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._bufferService.rows * Math.ceil(this._charSizeService.height * this._optionsService.options.lineHeight);\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.options.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current work.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.WORD;\n      this._selectWordAt(coords, true);\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.options.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Something went wrong\n    if (!this._model.selectionStart) {\n      throw new Error('Selection start position was not set before mousemove event');\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._scrollLines(this._dragScrollAmount, false);\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME) {\n      if (event.altKey) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else if (this.hasSelection) {\n      this._onSelectionChange.fire();\n    }\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    if (this._trimListener) {\n      this._trimListener.dispose();\n    }\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n        endIndex // The index of the selection's end char in the line string\n        - startIndex // The index of the selection's start char in the line string\n        + leftWideCharCount // The number of wide chars left of the initial char\n        + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n        - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n        - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /*' '*/) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /*' '*/) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /*' '*/) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine && nextBufferLine.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /*' '*/) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.options.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  return moveHorizontallyOnly(startX, startY, targetX, targetY, bufferService, applicationCursor);\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\nfunction moveHorizontallyOnly(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line && line.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line && line.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line && line.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  private static _audioContext: AudioContext;\n\n  static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (<any>window).AudioContext || (<any>window).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.options.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from './browser/LocalizableStrings';\nimport { ITerminal } from './Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private _terminal: ITerminal,\n    private _dimensions: IRenderDimensions\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new RenderDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._terminal.element.removeChild(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = <HTMLElement>e.target;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      if (this._liveRegion.parentNode) {\n        this._accessibilityTreeRoot.removeChild(this._liveRegion);\n      }\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerHTML = '&nbsp;';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  public setDimensions(dimensions: IRenderDimensions): void {\n    this._dimensions = dimensions;\n    this._refreshRowsDimensions();\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { ILinkifierEvent, ITerminal } from '../../Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService } from 'common/services/Services';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n// TODO: Pull into an addon when TS composite projects allow easier sharing of code (not just\n// interfaces) between core and addons\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement: HTMLStyleElement;\n  private _dimensionsStyleElement: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  constructor(\n    private _terminal: ITerminal,\n    private _colors: IColorSet,\n    private _charSizeService: ICharSizeService,\n    private _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._terminal.cols, this._terminal.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: null,\n      scaledCharHeight: null,\n      scaledCellWidth: null,\n      scaledCellHeight: null,\n      scaledCharLeft: null,\n      scaledCharTop: null,\n      scaledCanvasWidth: null,\n      scaledCanvasHeight: null,\n      canvasWidth: null,\n      canvasHeight: null,\n      actualCellWidth: null,\n      actualCellHeight: null\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = new DomRendererRowFactory(document, this._optionsService);\n\n    this._terminal.element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._terminal.screenElement.appendChild(this._rowContainer);\n    this._terminal.screenElement.appendChild(this._selectionContainer);\n\n    this._terminal.linkifier.onLinkHover(e => this._onLinkHover(e));\n    this._terminal.linkifier.onLinkLeave(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._terminal.element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._terminal.screenElement.removeChild(this._rowContainer);\n    this._terminal.screenElement.removeChild(this._selectionContainer);\n    this._terminal.screenElement.removeChild(this._themeStyleElement);\n    this._terminal.screenElement.removeChild(this._dimensionsStyleElement);\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._terminal.options.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._terminal.options.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._terminal.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._terminal.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._terminal.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._terminal.rows;\n\n    this._rowElements.forEach(element => {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    });\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._terminal.screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n        ` display: inline-block;` +\n        ` height: 100%;` +\n        ` vertical-align: top;` +\n        ` width: ${this.dimensions.actualCellWidth}px` +\n        `}`;\n\n    this._dimensionsStyleElement.innerHTML = styles;\n\n    this._selectionContainer.style.height = (<any>this._terminal)._viewportElement.style.height;\n    this._terminal.screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._terminal.screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._terminal.screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n        ` color: ${this._colors.foreground.css};` +\n        ` background-color: ${this._colors.background.css};` +\n        ` font-family: ${this._terminal.options.fontFamily};` +\n        ` font-size: ${this._terminal.options.fontSize}px;` +\n        `}`;\n    // Text styles\n    styles +=\n        `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n        ` font-weight: ${this._terminal.options.fontWeight};` +\n        `}` +\n        `${this._terminalSelector} span.${BOLD_CLASS} {` +\n        ` font-weight: ${this._terminal.options.fontWeightBold};` +\n        `}` +\n        `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n        ` font-style: italic;` +\n        `}`;\n    // Blink animation\n    styles +=\n        `@keyframes blink {` +\n        ` 0% {` +\n        `  background-color: ${this._colors.cursor.css};` +\n        `  color: ${this._colors.cursorAccent.css};` +\n        ` }` +\n        ` 50% {` +\n        `  background-color: ${this._colors.cursorAccent.css};` +\n        `  color: ${this._colors.cursor.css};` +\n        ` }` +\n        `}`;\n    // Cursor\n    styles +=\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS} {` +\n        ` outline: 1px solid ${this._colors.cursor.css};` +\n        ` outline-offset: -1px;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS} {` +\n        ` animation: blink 1s step-end infinite;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n        ` background-color: ${this._colors.cursor.css};` +\n        ` color: ${this._colors.cursorAccent.css};` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n        ` box-shadow: 1px 0 0 ${this._colors.cursor.css} inset;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n        ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n        `}`;\n    // Selection\n    styles +=\n        `${this._terminalSelector} .${SELECTION_CLASS} {` +\n        ` position: absolute;` +\n        ` top: 0;` +\n        ` left: 0;` +\n        ` z-index: 1;` +\n        ` pointer-events: none;` +\n        `}` +\n        `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n        ` position: absolute;` +\n        ` background-color: ${this._colors.selection.css};` +\n        `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n          `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n          `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${this._colors.background.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.innerHTML = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop());\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._terminal.buffer.ydisp;\n    const viewportEndRow = end[1] - this._terminal.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._terminal.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._terminal.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._terminal.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._terminal.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n    this._terminal.refresh(0, this._terminal.rows - 1);\n  }\n\n  public clear(): void {\n    this._rowElements.forEach(e => e.innerHTML = '');\n  }\n\n  public renderRows(start: number, end: number): void {\n    const terminal = this._terminal;\n\n    const cursorAbsoluteY = terminal.buffer.ybase + terminal.buffer.y;\n    const cursorX = this._terminal.buffer.x;\n    const cursorBlink = this._terminal.options.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerHTML = '';\n\n      const row = y + terminal.buffer.ydisp;\n      const lineData = terminal.buffer.lines.get(row);\n      const cursorStyle = terminal.options.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, terminal.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number { return -1; }\n  public deregisterCharacterJoiner(joinerId: number): boolean { return false; }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = <HTMLElement>row.children[x];\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ITerminalOptions, IOptionsService } from 'common/services/Services';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private _document: Document,\n    private _optionsService: IOptionsService\n  ) {\n  }\n\n  public createRow(lineData: IBufferLine, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      const width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (this._workCell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (this._workCell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (this._workCell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (this._workCell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      charElement.textContent = this._workCell.getChars() || WHITESPACE_CELL_CHAR;\n\n      const swapColor = this._workCell.isInverse();\n\n      // fg\n      if (this._workCell.isFgRGB()) {\n        let style = charElement.getAttribute('style') || '';\n        style += `${swapColor ? 'background-' : ''}color:rgb(${(AttributeData.toColorRGB(this._workCell.getFgColor())).join(',')});`;\n        charElement.setAttribute('style', style);\n      } else if (this._workCell.isFgPalette()) {\n        let fg = this._workCell.getFgColor();\n        if (this._workCell.isBold() && fg < 8 && !swapColor && this._optionsService.options.drawBoldTextInBrightColors) {\n          fg += 8;\n        }\n        charElement.classList.add(`xterm-${swapColor ? 'b' : 'f'}g-${fg}`);\n      } else if (swapColor) {\n        charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n      }\n\n      // bg\n      if (this._workCell.isBgRGB()) {\n        let style = charElement.getAttribute('style') || '';\n        style += `${swapColor ? '' : 'background-'}color:rgb(${(AttributeData.toColorRGB(this._workCell.getBgColor())).join(',')});`;\n        charElement.setAttribute('style', style);\n      } else if (this._workCell.isBgPalette()) {\n        charElement.classList.add(`xterm-${swapColor ? 'f' : 'b'}g-${this._workCell.getBgColor()}`);\n      } else if (swapColor) {\n        charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n      }\n\n      fragment.appendChild(charElement);\n    }\n    return fragment;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = isMac ? C0.ESC + 'b' : C0.ESC + '[1;5D';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = isMac ? C0.ESC + 'f' : C0.ESC + '[1;5C';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        if (result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        if (result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          // NUL\n          result.key = String.fromCharCode(0);\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          // delete\n          result.key = String.fromCharCode(127);\n        } else if (ev.keyCode === 219) {\n          // ^[ - Control Sequence Introducer (CSI)\n          result.key = String.fromCharCode(27);\n        } else if (ev.keyCode === 220) {\n          // ^\\ - String Terminator (ST)\n          result.key = String.fromCharCode(28);\n        } else if (ev.keyCode === 221) {\n          // ^] - Operating System Command (OSC)\n          result.key = String.fromCharCode(29);\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping && keyMapping[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'xterm';\nimport { ITerminal } from './Types';\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\n\nexport function applyWindowsMode(terminal: ITerminal): IDisposable {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  return terminal.onLineFeed(() => {\n    const line = terminal.buffer.lines.get(terminal.buffer.ybase + terminal.buffer.y - 1);\n    const lastChar = line.get(terminal.cols - 1);\n\n    const nextLine = terminal.buffer.lines.get(terminal.buffer.ybase + terminal.buffer.y);\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  });\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { IOptionsService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\nexport class RenderService extends Disposable implements IRenderService {\n  private _renderDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    optionsService: IOptionsService,\n    charSizeService: ICharSizeService\n  ) {\n    super();\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.intersectionRatio === 0;\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n    this._onRender.fire({ start, end });\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderCoordinator should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._renderer.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._renderer.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, IPartialTerminalOptions } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { clone } from 'common/Clone';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/wav;base64,UklGRigBAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQQBAADpAFgCwAMlBZoG/wdmCcoKRAypDQ8PbRDBEQQTOxRtFYcWlBePGIUZXhoiG88bcBz7HHIdzh0WHlMeZx51HmkeUx4WHs8dah0AHXwc3hs9G4saxRnyGBIYGBcQFv8U4RPAEoYRQBACD70NWwwHC6gJOwjWBloF7gOBAhABkf8b/qv8R/ve+Xf4Ife79W/0JfPZ8Z/wde9N7ijtE+wU6xvqM+lb6H7nw+YX5mrlxuQz5Mzje+Ma49fioeKD4nXiYeJy4pHitOL04j/jn+MN5IPkFOWs5U3mDefM55/ogOl36m7rdOyE7abuyu8D8Unyj/Pg9D/2qfcb+Yn6/vuK/Qj/lAAlAg==';\n\n// TODO: Freeze?\nexport const DEFAULT_OPTIONS: ITerminalOptions = Object.freeze({\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  bellSound:  DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  scrollback: 1000,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  disableStdin: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowsMode: false,\n\n  convertEol: false,\n  termName: 'xterm',\n  screenKeys: false,\n  debug: false,\n  cancelEvents: false,\n  useFlowControl: false,\n  wordSeparator: ' ()[]{}\\'\"'\n});\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class OptionsService implements IOptionsService {\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: IPartialTerminalOptions) {\n    this.options = clone(DEFAULT_OPTIONS);\n    Object.keys(options).forEach(k => {\n      if (k in this.options) {\n        const newValue = options[k as keyof IPartialTerminalOptions] as any;\n        this.options[k] = newValue;\n      }\n    });\n  }\n\n  public setOption(key: string, value: any): void {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n    if (CONSTRUCTOR_ONLY_OPTIONS.indexOf(key) !== -1) {\n      throw new Error(`Option \"${key}\" can only be set in the constructor`);\n    }\n    if (this.options[key] === value) {\n      return;\n    }\n\n    value = this._sanitizeAndValidateOption(key, value);\n\n    // Don't fire an option change event if they didn't change\n    if (this.options[key] === value) {\n      return;\n    }\n\n    this.options[key] = value;\n    this._onOptionChange.fire(key);\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error(`No option with key \"${key}\"`);\n    }\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.options.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.options.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService implements IBufferService {\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  constructor(\n    private _optionsService: IOptionsService\n  ) {\n    this.cols = Math.max(_optionsService.options.cols, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.options.rows, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n  }\n\n  public reset(): void {\n    this.buffers = new BufferSet(this._optionsService, this);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet implements IBufferSet {\n  private _normal: Buffer;\n  private _alt: Buffer;\n  private _activeBuffer: Buffer;\n\n\n  private _onBufferActivate = new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>();\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    readonly optionsService: IOptionsService,\n    readonly bufferService: IBufferService\n  ) {\n    this._normal = new Buffer(true, optionsService, bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, optionsService, bufferService);\n    this._activeBuffer = this._normal;\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.options.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n              // There is room above the buffer and there are no empty elements below the line,\n              // scroll up\n              this.ybase--;\n              addToY++;\n              if (this.ydisp > 0) {\n                // Viewport is at the top of the buffer, must increase downwards\n                this.ydisp--;\n              }\n            } else {\n              // Add a blank line if there is no buffer left at the top to scroll to, or if there\n              // are blank lines after the cursor\n              this.lines.push(new BufferLine(newCols, nullCell));\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.options.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.options.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    this.markers.splice(this.markers.indexOf(marker), 1);\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let result = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      result += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return {range: range, content: result};\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  constructor(\n    private readonly _renderService: IRenderService,\n    private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes } from 'common/Types';\nimport { clone } from 'common/Clone';\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false\n});\n\nexport class CoreService implements ICoreService {\n  public decPrivateModes: IDecPrivateModes;\n\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = new EventEmitter<void>();\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    private readonly _scrollToBottom: () => void,\n    private readonly _bufferService: IBufferService,\n    private readonly _optionsService: IOptionsService\n  ) {\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._onData.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(<any>terminal);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n"],"sourceRoot":""}